{"version":3,"file":"static/js/1347.9842f3a7.chunk.js","mappings":"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","sources":["../node_modules/crypto-js/core.js","../node_modules/crypto-js/enc-base64.js","../node_modules/crypto-js/enc-utf8.js","../node_modules/crypto-js/sha256.js","../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js","../node_modules/oidc-client-ts/src/index.ts","../node_modules/oidc-client-ts/src/utils/CryptoUtils.ts","../node_modules/oidc-client-ts/src/utils/Logger.ts","../node_modules/oidc-client-ts/src/utils/Event.ts","../node_modules/oidc-client-ts/src/utils/JwtUtils.ts","../node_modules/oidc-client-ts/src/utils/PopupUtils.ts","../node_modules/oidc-client-ts/src/utils/Timer.ts","../node_modules/oidc-client-ts/src/utils/UrlUtils.ts","../node_modules/oidc-client-ts/src/errors/ErrorResponse.ts","../node_modules/oidc-client-ts/src/errors/ErrorTimeout.ts","../node_modules/oidc-client-ts/src/AccessTokenEvents.ts","../node_modules/oidc-client-ts/src/CheckSessionIFrame.ts","../node_modules/oidc-client-ts/src/InMemoryWebStorage.ts","../node_modules/oidc-client-ts/src/JsonService.ts","../node_modules/oidc-client-ts/src/MetadataService.ts","../node_modules/oidc-client-ts/src/WebStorageStateStore.ts","../node_modules/oidc-client-ts/src/OidcClientSettings.ts","../node_modules/oidc-client-ts/src/TokenClient.ts","../node_modules/oidc-client-ts/src/State.ts","../node_modules/oidc-client-ts/src/SigninState.ts","../node_modules/oidc-client-ts/src/SigninResponse.ts","../node_modules/oidc-client-ts/src/SignoutResponse.ts","../node_modules/oidc-client-ts/src/ClaimsService.ts","../node_modules/oidc-client-ts/src/OidcClient.ts","../node_modules/oidc-client-ts/src/ResponseValidator.ts","../node_modules/oidc-client-ts/src/UserInfoService.ts","../node_modules/oidc-client-ts/src/SigninRequest.ts","../node_modules/oidc-client-ts/src/SignoutRequest.ts","../node_modules/oidc-client-ts/src/SessionMonitor.ts","../node_modules/oidc-client-ts/src/User.ts","../node_modules/oidc-client-ts/src/navigators/AbstractChildWindow.ts","../node_modules/oidc-client-ts/src/UserManagerSettings.ts","../node_modules/oidc-client-ts/src/navigators/IFrameWindow.ts","../node_modules/oidc-client-ts/src/navigators/PopupWindow.ts","../node_modules/oidc-client-ts/src/UserManagerEvents.ts","../node_modules/oidc-client-ts/src/UserManager.ts","../node_modules/oidc-client-ts/src/navigators/RedirectNavigator.ts","../node_modules/oidc-client-ts/src/navigators/PopupNavigator.ts","../node_modules/oidc-client-ts/src/navigators/IFrameNavigator.ts","../node_modules/oidc-client-ts/src/SilentRenewService.ts","../node_modules/oidc-client-ts/src/RefreshState.ts","../node_modules/oidc-client-ts/src/Version.ts","../node_modules/oidc-client-ts/package.json","../node_modules/oidc-spa/src/index.ts","../node_modules/oidc-spa/src/oidc.ts","../node_modules/oidc-spa/src/react.tsx","../node_modules/oidc-spa/src/tools/Deferred.ts","../node_modules/oidc-spa/src/tools/decodeJwt.ts","../node_modules/oidc-spa/src/tools/fnv1aHashToHex.ts","../node_modules/oidc-spa/src/tools/readExpirationTimeInJwt.ts","../node_modules/oidc-spa/src/tools/urlQueryParams.ts"],"sourcesContent":[";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.enc.Utf8;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nexport { ErrorResponse, ErrorTimeout } from \"./errors\";\nexport type { INavigator, IFrameWindowParams, IWindow, NavigateParams, NavigateResponse, PopupWindowParams, RedirectParams } from \"./navigators\";\nexport { Log, Logger } from \"./utils\";\nexport type { ILogger, PopupWindowFeatures } from \"./utils\";\nexport type { OidcAddressClaim, OidcStandardClaims, IdTokenClaims, JwtClaims } from \"./Claims\";\n\nexport { AccessTokenEvents } from \"./AccessTokenEvents\";\nexport type { AccessTokenCallback } from \"./AccessTokenEvents\";\nexport { CheckSessionIFrame } from \"./CheckSessionIFrame\";\nexport { InMemoryWebStorage } from \"./InMemoryWebStorage\";\nexport type { AsyncStorage } from \"./AsyncStorage\";\nexport { MetadataService } from \"./MetadataService\";\nexport * from \"./OidcClient\";\nexport { OidcClientSettingsStore } from \"./OidcClientSettings\";\nexport type { OidcClientSettings, SigningKey, ExtraHeader } from \"./OidcClientSettings\";\nexport type { OidcMetadata } from \"./OidcMetadata\";\nexport { SessionMonitor } from \"./SessionMonitor\";\nexport type { SessionStatus } from \"./SessionStatus\";\nexport type { SigninRequest, SigninRequestArgs } from \"./SigninRequest\";\nexport type { RefreshState } from \"./RefreshState\";\nexport { SigninResponse } from \"./SigninResponse\";\nexport { SigninState } from \"./SigninState\";\nexport type { SignoutRequest, SignoutRequestArgs } from \"./SignoutRequest\";\nexport { SignoutResponse } from \"./SignoutResponse\";\nexport { State } from \"./State\";\nexport type { StateStore } from \"./StateStore\";\nexport { User } from \"./User\";\nexport type { UserProfile } from \"./User\";\nexport * from \"./UserManager\";\nexport type {\n    UserManagerEvents,\n    SilentRenewErrorCallback,\n    UserLoadedCallback,\n    UserSessionChangedCallback,\n    UserSignedInCallback,\n    UserSignedOutCallback,\n    UserUnloadedCallback,\n} from \"./UserManagerEvents\";\nexport { UserManagerSettingsStore } from \"./UserManagerSettings\";\nexport type { UserManagerSettings } from \"./UserManagerSettings\";\nexport { Version } from \"./Version\";\nexport { WebStorageStateStore } from \"./WebStorageStateStore\";\n","import CryptoJS from \"crypto-js/core.js\";\nimport sha256 from \"crypto-js/sha256.js\";\nimport Base64 from \"crypto-js/enc-base64.js\";\nimport Utf8 from \"crypto-js/enc-utf8.js\";\n\nimport { Logger } from \"./Logger\";\n\nconst UUID_V4_TEMPLATE = \"10000000-1000-4000-8000-100000000000\";\n\n/**\n * @internal\n */\nexport class CryptoUtils {\n    private static _randomWord(): number {\n        return CryptoJS.lib.WordArray.random(1).words[0];\n    }\n\n    /**\n     * Generates RFC4122 version 4 guid\n     */\n    public static generateUUIDv4(): string {\n        const uuid = UUID_V4_TEMPLATE.replace(/[018]/g, c =>\n            (+c ^ CryptoUtils._randomWord() & 15 >> +c / 4).toString(16),\n        );\n        return uuid.replace(/-/g, \"\");\n    }\n\n    /**\n     * PKCE: Generate a code verifier\n     */\n    public static generateCodeVerifier(): string {\n        return CryptoUtils.generateUUIDv4() + CryptoUtils.generateUUIDv4() + CryptoUtils.generateUUIDv4();\n    }\n\n    /**\n     * PKCE: Generate a code challenge\n     */\n    public static generateCodeChallenge(code_verifier: string): string {\n        try {\n            const hashed = sha256(code_verifier);\n            return Base64.stringify(hashed).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n        }\n        catch (err) {\n            Logger.error(\"CryptoUtils.generateCodeChallenge\", err);\n            throw err;\n        }\n    }\n\n    /**\n     * Generates a base64-encoded string for a basic auth header\n     */\n    public static generateBasicAuth(client_id: string, client_secret: string): string {\n        const basicAuth = Utf8.parse([client_id, client_secret].join(\":\"));\n        return Base64.stringify(basicAuth);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\n/**\n * Native interface\n *\n * @public\n */\nexport interface ILogger {\n    debug(...args: unknown[]): void;\n    info(...args: unknown[]): void;\n    warn(...args: unknown[]): void;\n    error(...args: unknown[]): void;\n}\n\nconst nopLogger: ILogger = {\n    debug: () => undefined,\n    info: () => undefined,\n    warn: () => undefined,\n    error: () => undefined,\n};\n\nlet level: number;\nlet logger: ILogger;\n\n/**\n * Log levels\n *\n * @public\n */\nexport enum Log {\n    NONE,\n    ERROR,\n    WARN,\n    INFO,\n    DEBUG\n}\n\n/**\n * Log manager\n *\n * @public\n */\nexport namespace Log { // eslint-disable-line @typescript-eslint/no-namespace\n    export function reset(): void {\n        level = Log.INFO;\n        logger = nopLogger;\n    }\n\n    export function setLevel(value: Log): void {\n        if (!(Log.NONE <= value && value <= Log.DEBUG)) {\n            throw new Error(\"Invalid log level\");\n        }\n        level = value;\n    }\n\n    export function setLogger(value: ILogger): void {\n        logger = value;\n    }\n}\n\n/**\n * Internal logger instance\n *\n * @public\n */\nexport class Logger {\n    private _method?: string;\n    public constructor(private _name: string) {}\n\n    /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n    public debug(...args: unknown[]): void {\n        if (level >= Log.DEBUG) {\n            logger.debug(Logger._format(this._name, this._method), ...args);\n        }\n    }\n    public info(...args: unknown[]): void {\n        if (level >= Log.INFO) {\n            logger.info(Logger._format(this._name, this._method), ...args);\n        }\n    }\n    public warn(...args: unknown[]): void {\n        if (level >= Log.WARN) {\n            logger.warn(Logger._format(this._name, this._method), ...args);\n        }\n    }\n    public error(...args: unknown[]): void {\n        if (level >= Log.ERROR) {\n            logger.error(Logger._format(this._name, this._method), ...args);\n        }\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n\n    public throw(err: Error): never {\n        this.error(err);\n        throw err;\n    }\n\n    public create(method: string): Logger {\n        const methodLogger: Logger = Object.create(this);\n        methodLogger._method = method;\n        methodLogger.debug(\"begin\");\n        return methodLogger;\n    }\n\n    public static createStatic(name: string, staticMethod: string): Logger {\n        const staticLogger = new Logger(`${name}.${staticMethod}`);\n        staticLogger.debug(\"begin\");\n        return staticLogger;\n    }\n\n    private static _format(name: string, method?: string) {\n        const prefix = `[${name}]`;\n        return method ? `${prefix} ${method}:` : prefix;\n    }\n\n    /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n    // helpers for static class methods\n    public static debug(name: string, ...args: unknown[]): void {\n        if (level >= Log.DEBUG) {\n            logger.debug(Logger._format(name), ...args);\n        }\n    }\n    public static info(name: string, ...args: unknown[]): void {\n        if (level >= Log.INFO) {\n            logger.info(Logger._format(name), ...args);\n        }\n    }\n    public static warn(name: string, ...args: unknown[]): void {\n        if (level >= Log.WARN) {\n            logger.warn(Logger._format(name), ...args);\n        }\n    }\n    public static error(name: string, ...args: unknown[]): void {\n        if (level >= Log.ERROR) {\n            logger.error(Logger._format(name), ...args);\n        }\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n}\n\nLog.reset();\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./Logger\";\n\n/**\n * @internal\n */\nexport type Callback<EventType extends unknown[]> = (...ev: EventType) => (Promise<void> | void);\n\n/**\n * @internal\n */\nexport class Event<EventType extends unknown[]> {\n    protected readonly _logger = new Logger(`Event('${this._name}')`);\n\n    private _callbacks: Array<Callback<EventType>> = [];\n\n    public constructor(protected readonly _name: string) {}\n\n    public addHandler(cb: Callback<EventType>): () => void {\n        this._callbacks.push(cb);\n        return () => this.removeHandler(cb);\n    }\n\n    public removeHandler(cb: Callback<EventType>): void {\n        const idx = this._callbacks.lastIndexOf(cb);\n        if (idx >= 0) {\n            this._callbacks.splice(idx, 1);\n        }\n    }\n\n    public raise(...ev: EventType): void {\n        this._logger.debug(\"raise:\", ...ev);\n        for (const cb of this._callbacks) {\n            void cb(...ev);\n        }\n    }\n}\n","import jwt_decode from \"jwt-decode\";\n\nimport { Logger } from \"./Logger\";\nimport type { JwtClaims } from \"../Claims\";\n\n/**\n * @internal\n */\nexport class JwtUtils {\n    // IMPORTANT: doesn't validate the token\n    public static decode(token: string): JwtClaims {\n        try {\n            return jwt_decode<JwtClaims>(token);\n        }\n        catch (err) {\n            Logger.error(\"JwtUtils.decode\", err);\n            throw err;\n        }\n    }\n}\n","/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open#window_features\n *\n * @public\n */\nexport interface PopupWindowFeatures {\n    left?: number;\n    top?: number;\n    width?: number;\n    height?: number;\n    menubar?: boolean | string;\n    toolbar?: boolean | string;\n    location?: boolean | string;\n    status?: boolean | string;\n    resizable?: boolean | string;\n    scrollbars?: boolean | string;\n    /** Close popup window after time in seconds, by default it is -1. To enable this feature set value greater than 0 */\n    closePopupWindowAfterInSeconds?: number;\n\n    [k: string]: boolean | string | number | undefined;\n}\n\nexport class PopupUtils {\n    /**\n     * Populates a map of window features with a placement centered in front of\n     * the current window. If no explicit width is given, a default value is\n     * binned into [800, 720, 600, 480, 360] based on the current window's width.\n     */\n    static center({ ...features }: PopupWindowFeatures): PopupWindowFeatures {\n        if (features.width == null)\n            features.width = [800, 720, 600, 480].find(width => width <= window.outerWidth / 1.618) ?? 360;\n        features.left ??= Math.max(0, Math.round(window.screenX + (window.outerWidth - features.width) / 2));\n        if (features.height != null)\n            features.top ??= Math.max(0, Math.round(window.screenY + (window.outerHeight - features.height) / 2));\n        return features;\n    }\n\n    static serialize(features: PopupWindowFeatures): string {\n        return Object.entries(features)\n            .filter(([, value]) => value != null)\n            .map(([key, value]) => `${key}=${typeof value !== \"boolean\" ? value as string : value ? \"yes\" : \"no\"}`)\n            .join(\",\");\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Event } from \"./Event\";\nimport { Logger } from \"./Logger\";\n\n/**\n * @internal\n */\nexport class Timer extends Event<[void]> {\n    protected readonly _logger = new Logger(`Timer('${this._name}')`);\n    private _timerHandle: ReturnType<typeof setInterval> | null = null;\n    private _expiration = 0;\n\n    // get the time\n    public static getEpochTime(): number {\n        return Math.floor(Date.now() / 1000);\n    }\n\n    public init(durationInSeconds: number): void {\n        const logger = this._logger.create(\"init\");\n        durationInSeconds = Math.max(Math.floor(durationInSeconds), 1);\n        const expiration = Timer.getEpochTime() + durationInSeconds;\n        if (this.expiration === expiration && this._timerHandle) {\n            // no need to reinitialize to same expiration, so bail out\n            logger.debug(\"skipping since already initialized for expiration at\", this.expiration);\n            return;\n        }\n\n        this.cancel();\n\n        logger.debug(\"using duration\", durationInSeconds);\n        this._expiration = expiration;\n\n        // we're using a fairly short timer and then checking the expiration in the\n        // callback to handle scenarios where the browser device sleeps, and then\n        // the timers end up getting delayed.\n        const timerDurationInSeconds = Math.min(durationInSeconds, 5);\n        this._timerHandle = setInterval(this._callback, timerDurationInSeconds * 1000);\n    }\n\n    public get expiration(): number {\n        return this._expiration;\n    }\n\n    public cancel(): void {\n        this._logger.create(\"cancel\");\n        if (this._timerHandle) {\n            clearInterval(this._timerHandle);\n            this._timerHandle = null;\n        }\n    }\n\n    protected _callback = (): void => {\n        const diff = this._expiration - Timer.getEpochTime();\n        this._logger.debug(\"timer completes in\", diff);\n\n        if (this._expiration <= Timer.getEpochTime()) {\n            this.cancel();\n            super.raise();\n        }\n    };\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\n/**\n * @internal\n */\nexport class UrlUtils {\n    public static readParams(url: string, responseMode: \"query\" | \"fragment\" = \"query\"): URLSearchParams {\n        if (!url) throw new TypeError(\"Invalid URL\");\n        // the base URL is irrelevant, it's just here to support relative url arguments\n        const parsedUrl = new URL(url, \"http://127.0.0.1\");\n        const params = parsedUrl[responseMode === \"fragment\" ? \"hash\" : \"search\"];\n        return new URLSearchParams(params.slice(1));\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\n\n/**\n * Error class thrown in case of an authentication error.\n *\n * See https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n *\n * @public\n */\nexport class ErrorResponse extends Error {\n    /** Marker to detect class: \"ErrorResponse\" */\n    public readonly name: string = \"ErrorResponse\";\n\n    /** An error code string that can be used to classify the types of errors that occur and to respond to errors. */\n    public readonly error: string | null;\n    /** additional information that can help a developer identify the cause of the error.*/\n    public readonly error_description: string | null;\n    /**\n     * URI identifying a human-readable web page with information about the error, used to provide the client\n       developer with additional information about the error.\n    */\n    public readonly error_uri: string | null;\n\n    /** custom state data set during the initial signin request */\n    public state?: unknown;\n\n    public readonly session_state: string | null;\n\n    public constructor(\n        args: {\n            error?: string | null; error_description?: string | null; error_uri?: string | null;\n            userState?: unknown; session_state?: string | null;\n        },\n        /** The x-www-form-urlencoded request body sent to the authority server */\n        public readonly form?: URLSearchParams,\n    ) {\n        super(args.error_description || args.error || \"\");\n\n        if (!args.error) {\n            Logger.error(\"ErrorResponse\", \"No error passed\");\n            throw new Error(\"No error passed\");\n        }\n\n        this.error = args.error;\n        this.error_description = args.error_description ?? null;\n        this.error_uri = args.error_uri ?? null;\n\n        this.state = args.userState;\n        this.session_state = args.session_state ?? null;\n    }\n}\n","// Copyright (C) 2021 AuthTS Contributors\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\n/**\n * Error class thrown in case of network timeouts (e.g IFrame time out).\n *\n * @public\n */\nexport class ErrorTimeout extends Error {\n    /** Marker to detect class: \"ErrorTimeout\" */\n    public readonly name: string = \"ErrorTimeout\";\n\n    public constructor(message?: string) {\n        super(message);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, Timer } from \"./utils\";\nimport type { User } from \"./User\";\n\n/**\n * @public\n */\nexport type AccessTokenCallback = (...ev: unknown[]) => (Promise<void> | void);\n\n/**\n * @public\n */\nexport class AccessTokenEvents {\n    protected readonly _logger = new Logger(\"AccessTokenEvents\");\n\n    private readonly _expiringTimer = new Timer(\"Access token expiring\");\n    private readonly _expiredTimer = new Timer(\"Access token expired\");\n    private readonly _expiringNotificationTimeInSeconds: number;\n\n    public constructor(args: { expiringNotificationTimeInSeconds: number }) {\n        this._expiringNotificationTimeInSeconds = args.expiringNotificationTimeInSeconds;\n    }\n\n    public load(container: User): void {\n        const logger = this._logger.create(\"load\");\n        // only register events if there's an access token and it has an expiration\n        if (container.access_token && container.expires_in !== undefined) {\n            const duration = container.expires_in;\n            logger.debug(\"access token present, remaining duration:\", duration);\n\n            if (duration > 0) {\n                // only register expiring if we still have time\n                let expiring = duration - this._expiringNotificationTimeInSeconds;\n                if (expiring <= 0) {\n                    expiring = 1;\n                }\n\n                logger.debug(\"registering expiring timer, raising in\", expiring, \"seconds\");\n                this._expiringTimer.init(expiring);\n            }\n            else {\n                logger.debug(\"canceling existing expiring timer because we're past expiration.\");\n                this._expiringTimer.cancel();\n            }\n\n            // if it's negative, it will still fire\n            const expired = duration + 1;\n            logger.debug(\"registering expired timer, raising in\", expired, \"seconds\");\n            this._expiredTimer.init(expired);\n        }\n        else {\n            this._expiringTimer.cancel();\n            this._expiredTimer.cancel();\n        }\n    }\n\n    public unload(): void {\n        this._logger.debug(\"unload: canceling existing access token timers\");\n        this._expiringTimer.cancel();\n        this._expiredTimer.cancel();\n    }\n\n    /**\n     * Add callback: Raised prior to the access token expiring.\n     */\n    public addAccessTokenExpiring(cb: AccessTokenCallback): () => void {\n        return this._expiringTimer.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised prior to the access token expiring.\n     */\n    public removeAccessTokenExpiring(cb: AccessTokenCallback): void {\n        this._expiringTimer.removeHandler(cb);\n    }\n\n    /**\n     * Add callback: Raised after the access token has expired.\n     */\n    public addAccessTokenExpired(cb: AccessTokenCallback): () => void {\n        return this._expiredTimer.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised after the access token has expired.\n     */\n    public removeAccessTokenExpired(cb: AccessTokenCallback): void {\n        this._expiredTimer.removeHandler(cb);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\n\n/**\n * @internal\n */\nexport class CheckSessionIFrame {\n    private readonly _logger = new Logger(\"CheckSessionIFrame\");\n    private _frame_origin: string;\n    private _frame: HTMLIFrameElement;\n    private _timer: ReturnType<typeof setInterval> | null = null;\n    private _session_state: string | null = null;\n\n    public constructor(\n        private _callback: () => Promise<void>,\n        private _client_id: string,\n        url: string,\n        private _intervalInSeconds: number,\n        private _stopOnError: boolean,\n    ) {\n        const parsedUrl = new URL(url);\n        this._frame_origin = parsedUrl.origin;\n\n        this._frame = window.document.createElement(\"iframe\");\n\n        // shotgun approach\n        this._frame.style.visibility = \"hidden\";\n        this._frame.style.position = \"fixed\";\n        this._frame.style.left = \"-1000px\";\n        this._frame.style.top = \"0\";\n        this._frame.width = \"0\";\n        this._frame.height = \"0\";\n        this._frame.src = parsedUrl.href;\n    }\n\n    public load(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this._frame.onload = () => {\n                resolve();\n            };\n\n            window.document.body.appendChild(this._frame);\n            window.addEventListener(\"message\", this._message, false);\n        });\n    }\n\n    private _message = (e: MessageEvent<string>): void => {\n        if (e.origin === this._frame_origin &&\n            e.source === this._frame.contentWindow\n        ) {\n            if (e.data === \"error\") {\n                this._logger.error(\"error message from check session op iframe\");\n                if (this._stopOnError) {\n                    this.stop();\n                }\n            }\n            else if (e.data === \"changed\") {\n                this._logger.debug(\"changed message from check session op iframe\");\n                this.stop();\n                void this._callback();\n            }\n            else {\n                this._logger.debug(e.data + \" message from check session op iframe\");\n            }\n        }\n    };\n\n    public start(session_state: string): void {\n        if (this._session_state === session_state) {\n            return;\n        }\n\n        this._logger.create(\"start\");\n\n        this.stop();\n\n        this._session_state = session_state;\n\n        const send = () => {\n            if (!this._frame.contentWindow || !this._session_state) {\n                return;\n            }\n\n            this._frame.contentWindow.postMessage(this._client_id + \" \" + this._session_state, this._frame_origin);\n        };\n\n        // trigger now\n        send();\n\n        // and setup timer\n        this._timer = setInterval(send, this._intervalInSeconds * 1000);\n    }\n\n    public stop(): void {\n        this._logger.create(\"stop\");\n        this._session_state = null;\n\n        if (this._timer) {\n\n            clearInterval(this._timer);\n            this._timer = null;\n        }\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\n\n/**\n * @public\n */\nexport class InMemoryWebStorage implements Storage {\n    private readonly _logger = new Logger(\"InMemoryWebStorage\");\n    private _data: Record<string, string> = {};\n\n    public clear(): void {\n        this._logger.create(\"clear\");\n        this._data = {};\n    }\n\n    public getItem(key: string): string {\n        this._logger.create(`getItem('${key}')`);\n        return this._data[key];\n    }\n\n    public setItem(key: string, value: string): void {\n        this._logger.create(`setItem('${key}')`);\n        this._data[key] = value;\n    }\n\n    public removeItem(key: string): void {\n        this._logger.create(`removeItem('${key}')`);\n        delete this._data[key];\n    }\n\n    public get length(): number {\n        return Object.getOwnPropertyNames(this._data).length;\n    }\n\n    public key(index: number): string {\n        return Object.getOwnPropertyNames(this._data)[index];\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { ErrorResponse, ErrorTimeout } from \"./errors\";\nimport type { ExtraHeader } from \"./OidcClientSettings\";\nimport { Logger } from \"./utils\";\n\n/**\n * @internal\n */\nexport type JwtHandler = (text: string) => Promise<Record<string, unknown>>;\n\n/**\n * @internal\n */\nexport interface GetJsonOpts {\n    token?: string;\n    credentials?: RequestCredentials;\n}\n\n/**\n * @internal\n */\nexport interface PostFormOpts {\n    body: URLSearchParams;\n    basicAuth?: string;\n    timeoutInSeconds?: number;\n    initCredentials?: \"same-origin\" | \"include\" | \"omit\";\n}\n\n/**\n * @internal\n */\nexport class JsonService {\n    private readonly _logger = new Logger(\"JsonService\");\n\n    private _contentTypes: string[] = [];\n\n    public constructor(\n        additionalContentTypes: string[] = [],\n        private _jwtHandler: JwtHandler | null = null,\n        private _extraHeaders: Record<string, ExtraHeader> = {},\n    ) {\n        this._contentTypes.push(...additionalContentTypes, \"application/json\");\n        if (_jwtHandler) {\n            this._contentTypes.push(\"application/jwt\");\n        }\n    }\n\n    protected async fetchWithTimeout(input: RequestInfo, init: RequestInit & { timeoutInSeconds?: number } = {}) {\n        const { timeoutInSeconds, ...initFetch } = init;\n        if (!timeoutInSeconds) {\n            return await fetch(input, initFetch);\n        }\n\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), timeoutInSeconds * 1000);\n\n        try {\n            const response = await fetch(input, {\n                ...init,\n                signal: controller.signal,\n            });\n            return response;\n        }\n        catch (err) {\n            if (err instanceof DOMException && err.name === \"AbortError\") {\n                throw new ErrorTimeout(\"Network timed out\");\n            }\n            throw err;\n        }\n        finally {\n            clearTimeout(timeoutId);\n        }\n    }\n\n    public async getJson(url: string, {\n        token,\n        credentials,\n    }: GetJsonOpts = {}): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"getJson\");\n        const headers: HeadersInit = {\n            \"Accept\": this._contentTypes.join(\", \"),\n        };\n        if (token) {\n            logger.debug(\"token passed, setting Authorization header\");\n            headers[\"Authorization\"] = \"Bearer \" + token;\n        }\n\n        this.appendExtraHeaders(headers);\n\n        let response: Response;\n        try {\n            logger.debug(\"url:\", url);\n            response = await this.fetchWithTimeout(url, { method: \"GET\", headers, credentials });\n        }\n        catch (err) {\n            logger.error(\"Network Error\");\n            throw err;\n        }\n\n        logger.debug(\"HTTP response received, status\", response.status);\n        const contentType = response.headers.get(\"Content-Type\");\n        if (contentType && !this._contentTypes.find(item => contentType.startsWith(item))) {\n            logger.throw(new Error(`Invalid response Content-Type: ${(contentType ?? \"undefined\")}, from URL: ${url}`));\n        }\n        if (response.ok && this._jwtHandler && contentType?.startsWith(\"application/jwt\")) {\n            return await this._jwtHandler(await response.text());\n        }\n        let json: Record<string, unknown>;\n        try {\n            json = await response.json();\n        }\n        catch (err) {\n            logger.error(\"Error parsing JSON response\", err);\n            if (response.ok) throw err;\n            throw new Error(`${response.statusText} (${response.status})`);\n        }\n        if (!response.ok) {\n            logger.error(\"Error from server:\", json);\n            if (json.error) {\n                throw new ErrorResponse(json);\n            }\n            throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n        }\n        return json;\n    }\n\n    public async postForm(url: string, {\n        body,\n        basicAuth,\n        timeoutInSeconds,\n        initCredentials,\n    }: PostFormOpts): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"postForm\");\n        const headers: HeadersInit = {\n            \"Accept\": this._contentTypes.join(\", \"),\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n        };\n        if (basicAuth !== undefined) {\n            headers[\"Authorization\"] = \"Basic \" + basicAuth;\n        }\n\n        this.appendExtraHeaders(headers);\n\n        let response: Response;\n        try {\n            logger.debug(\"url:\", url);\n            response = await this.fetchWithTimeout(url, { method: \"POST\", headers, body, timeoutInSeconds, credentials: initCredentials });\n        }\n        catch (err) {\n            logger.error(\"Network error\");\n            throw err;\n        }\n\n        logger.debug(\"HTTP response received, status\", response.status);\n        const contentType = response.headers.get(\"Content-Type\");\n        if (contentType && !this._contentTypes.find(item => contentType.startsWith(item))) {\n            throw new Error(`Invalid response Content-Type: ${(contentType ?? \"undefined\")}, from URL: ${url}`);\n        }\n\n        const responseText = await response.text();\n\n        let json: Record<string, unknown> = {};\n        if (responseText) {\n            try {\n                json = JSON.parse(responseText);\n            }\n            catch (err) {\n                logger.error(\"Error parsing JSON response\", err);\n                if (response.ok) throw err;\n                throw new Error(`${response.statusText} (${response.status})`);\n            }\n        }\n\n        if (!response.ok) {\n            logger.error(\"Error from server:\", json);\n            if (json.error) {\n                throw new ErrorResponse(json, body);\n            }\n            throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n        }\n\n        return json;\n    }\n\n    private appendExtraHeaders(\n        headers: Record<string, string>,\n    ): void {\n        const logger = this._logger.create(\"appendExtraHeaders\");\n        const customKeys = Object.keys(this._extraHeaders);\n        const protectedHeaders = [\n            \"authorization\",\n            \"accept\",\n            \"content-type\",\n        ];\n        if (customKeys.length === 0) {\n            return;\n        }\n        customKeys.forEach((headerName) => {\n            if (protectedHeaders.includes(headerName.toLocaleLowerCase())) {\n                logger.warn(\"Protected header could not be overridden\", headerName, protectedHeaders);\n                return;\n            }\n            const content = (typeof this._extraHeaders[headerName] === \"function\") ?\n                (this._extraHeaders[headerName] as ()=>string)() :\n                this._extraHeaders[headerName];\n            if (content && content !== \"\") {\n                headers[headerName] = content as string;\n            }\n        });\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport { JsonService } from \"./JsonService\";\nimport type { OidcClientSettingsStore, SigningKey } from \"./OidcClientSettings\";\nimport type { OidcMetadata } from \"./OidcMetadata\";\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata\n */\nexport class MetadataService {\n    private readonly _logger = new Logger(\"MetadataService\");\n    private readonly _jsonService;\n\n    // cache\n    private _metadataUrl: string;\n    private _signingKeys: SigningKey[] | null = null;\n    private _metadata: Partial<OidcMetadata> | null = null;\n    private _fetchRequestCredentials: RequestCredentials | undefined;\n\n    public constructor(private readonly _settings: OidcClientSettingsStore) {\n        this._metadataUrl = this._settings.metadataUrl;\n        this._jsonService = new JsonService(\n            [\"application/jwk-set+json\"],\n            null,\n            this._settings.extraHeaders,\n        );\n        if (this._settings.signingKeys) {\n            this._logger.debug(\"using signingKeys from settings\");\n            this._signingKeys = this._settings.signingKeys;\n        }\n\n        if (this._settings.metadata) {\n            this._logger.debug(\"using metadata from settings\");\n            this._metadata = this._settings.metadata;\n        }\n\n        if (this._settings.fetchRequestCredentials) {\n            this._logger.debug(\"using fetchRequestCredentials from settings\");\n            this._fetchRequestCredentials = this._settings.fetchRequestCredentials;\n        }\n    }\n\n    public resetSigningKeys(): void {\n        this._signingKeys = null;\n    }\n\n    public async getMetadata(): Promise<Partial<OidcMetadata>> {\n        const logger = this._logger.create(\"getMetadata\");\n        if (this._metadata) {\n            logger.debug(\"using cached values\");\n            return this._metadata;\n        }\n\n        if (!this._metadataUrl) {\n            logger.throw(new Error(\"No authority or metadataUrl configured on settings\"));\n            throw null;\n        }\n\n        logger.debug(\"getting metadata from\", this._metadataUrl);\n        const metadata = await this._jsonService.getJson(this._metadataUrl, { credentials: this._fetchRequestCredentials });\n\n        logger.debug(\"merging remote JSON with seed metadata\");\n        this._metadata = Object.assign({}, this._settings.metadataSeed, metadata);\n        return this._metadata;\n    }\n\n    public getIssuer(): Promise<string> {\n        return this._getMetadataProperty(\"issuer\") as Promise<string>;\n    }\n\n    public getAuthorizationEndpoint(): Promise<string> {\n        return this._getMetadataProperty(\"authorization_endpoint\") as Promise<string>;\n    }\n\n    public getUserInfoEndpoint(): Promise<string> {\n        return this._getMetadataProperty(\"userinfo_endpoint\") as Promise<string>;\n    }\n\n    public getTokenEndpoint(optional: false): Promise<string>;\n    public getTokenEndpoint(optional?: true): Promise<string | undefined>;\n    public getTokenEndpoint(optional = true): Promise<string | undefined> {\n        return this._getMetadataProperty(\"token_endpoint\", optional) as Promise<string | undefined>;\n    }\n\n    public getCheckSessionIframe(): Promise<string | undefined> {\n        return this._getMetadataProperty(\"check_session_iframe\", true) as Promise<string | undefined>;\n    }\n\n    public getEndSessionEndpoint(): Promise<string | undefined> {\n        return this._getMetadataProperty(\"end_session_endpoint\", true) as Promise<string | undefined>;\n    }\n\n    public getRevocationEndpoint(optional: false): Promise<string>;\n    public getRevocationEndpoint(optional?: true): Promise<string | undefined>;\n    public getRevocationEndpoint(optional = true): Promise<string | undefined> {\n        return this._getMetadataProperty(\"revocation_endpoint\", optional) as Promise<string | undefined>;\n    }\n\n    public getKeysEndpoint(optional: false): Promise<string>;\n    public getKeysEndpoint(optional?: true): Promise<string | undefined>;\n    public getKeysEndpoint(optional = true): Promise<string | undefined> {\n        return this._getMetadataProperty(\"jwks_uri\", optional) as Promise<string | undefined>;\n    }\n\n    protected async _getMetadataProperty(name: keyof OidcMetadata, optional=false): Promise<string | boolean | string[] | undefined> {\n        const logger = this._logger.create(`_getMetadataProperty('${name}')`);\n\n        const metadata = await this.getMetadata();\n        logger.debug(\"resolved\");\n\n        if (metadata[name] === undefined) {\n            if (optional === true) {\n                logger.warn(\"Metadata does not contain optional property\");\n                return undefined;\n            }\n\n            logger.throw(new Error(\"Metadata does not contain property \" + name));\n        }\n\n        return metadata[name];\n    }\n\n    public async getSigningKeys(): Promise<SigningKey[] | null> {\n        const logger = this._logger.create(\"getSigningKeys\");\n        if (this._signingKeys) {\n            logger.debug(\"returning signingKeys from cache\");\n            return this._signingKeys;\n        }\n\n        const jwks_uri = await this.getKeysEndpoint(false);\n        logger.debug(\"got jwks_uri\", jwks_uri);\n\n        const keySet = await this._jsonService.getJson(jwks_uri);\n        logger.debug(\"got key set\", keySet);\n\n        if (!Array.isArray(keySet.keys)) {\n            logger.throw(new Error(\"Missing keys on keyset\"));\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        this._signingKeys = keySet.keys;\n        return this._signingKeys;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport type { StateStore } from \"./StateStore\";\nimport type { AsyncStorage } from \"./AsyncStorage\";\n\n/**\n * @public\n */\nexport class WebStorageStateStore implements StateStore {\n    private readonly _logger = new Logger(\"WebStorageStateStore\");\n\n    private readonly _store: AsyncStorage | Storage;\n    private readonly _prefix: string;\n\n    public constructor({\n        prefix = \"oidc.\",\n        store = localStorage,\n    }: { prefix?: string; store?: AsyncStorage | Storage } = {}) {\n        this._store = store;\n        this._prefix = prefix;\n    }\n\n    public async set(key: string, value: string): Promise<void> {\n        this._logger.create(`set('${key}')`);\n\n        key = this._prefix + key;\n        await this._store.setItem(key, value);\n    }\n\n    public async get(key: string): Promise<string | null> {\n        this._logger.create(`get('${key}')`);\n\n        key = this._prefix + key;\n        const item = await this._store.getItem(key);\n        return item;\n    }\n\n    public async remove(key: string): Promise<string | null> {\n        this._logger.create(`remove('${key}')`);\n\n        key = this._prefix + key;\n        const item = await this._store.getItem(key);\n        await this._store.removeItem(key);\n        return item;\n    }\n\n    public async getAllKeys(): Promise<string[]> {\n        this._logger.create(\"getAllKeys\");\n        const len = await this._store.length;\n\n        const keys = [];\n        for (let index = 0; index < len; index++) {\n            const key = await this._store.key(index);\n            if (key && key.indexOf(this._prefix) === 0) {\n                keys.push(key.substr(this._prefix.length));\n            }\n        }\n        return keys;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { WebStorageStateStore } from \"./WebStorageStateStore\";\nimport type { OidcMetadata } from \"./OidcMetadata\";\nimport type { StateStore } from \"./StateStore\";\nimport { InMemoryWebStorage } from \"./InMemoryWebStorage\";\n\nconst DefaultResponseType = \"code\";\nconst DefaultScope = \"openid\";\nconst DefaultClientAuthentication = \"client_secret_post\";\nconst DefaultResponseMode = \"query\";\nconst DefaultStaleStateAgeInSeconds = 60 * 15;\nconst DefaultClockSkewInSeconds = 60 * 5;\n\n/**\n * @public\n */\nexport type SigningKey = Record<string, string | string[]>;\n\n/**\n * @public\n */\nexport type ExtraHeader = string | (() => string);\n\n/**\n * The settings used to configure the {@link OidcClient}.\n *\n * @public\n */\nexport interface OidcClientSettings {\n    /** The URL of the OIDC/OAuth2 provider */\n    authority: string;\n    metadataUrl?: string;\n    /** Provide metadata when authority server does not allow CORS on the metadata endpoint */\n    metadata?: Partial<OidcMetadata>;\n    /** Can be used to seed or add additional values to the results of the discovery request */\n    metadataSeed?: Partial<OidcMetadata>;\n    /** Provide signingKeys when authority server does not allow CORS on the jwks uri */\n    signingKeys?: SigningKey[];\n\n    /** Your client application's identifier as registered with the OIDC/OAuth2 */\n    client_id: string;\n    client_secret?: string;\n    /** The type of response desired from the OIDC/OAuth2 provider (default: \"code\") */\n    response_type?: string;\n    /** The scope being requested from the OIDC/OAuth2 provider (default: \"openid\") */\n    scope?: string;\n    /** The redirect URI of your client application to receive a response from the OIDC/OAuth2 provider */\n    redirect_uri: string;\n    /** The OIDC/OAuth2 post-logout redirect URI */\n    post_logout_redirect_uri?: string;\n\n    /**\n     * Client authentication method that is used to authenticate when using the token endpoint (default: \"client_secret_post\")\n     * - \"client_secret_basic\": using the HTTP Basic authentication scheme\n     * - \"client_secret_post\": including the client credentials in the request body\n     *\n     * See https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication\n     */\n    client_authentication?: \"client_secret_basic\" | \"client_secret_post\";\n\n    /** optional protocol param */\n    prompt?: string;\n    /** optional protocol param */\n    display?: string;\n    /** optional protocol param */\n    max_age?: number;\n    /** optional protocol param */\n    ui_locales?: string;\n    /** optional protocol param */\n    acr_values?: string;\n    /** optional protocol param */\n    resource?: string | string[];\n\n    /** optional protocol param (default: \"query\") */\n    response_mode?: \"query\" | \"fragment\";\n\n    /**\n     * Should optional OIDC protocol claims be removed from profile or specify the ones to be removed (default: true)\n     * When true, the following claims are removed by default: [\"nbf\", \"jti\", \"auth_time\", \"nonce\", \"acr\", \"amr\", \"azp\", \"at_hash\"]\n     * When specifying claims, the following claims are not allowed: [\"sub\", \"iss\", \"aud\", \"exp\", \"iat\"]\n    */\n    filterProtocolClaims?: boolean | string[];\n    /** Flag to control if additional identity data is loaded from the user info endpoint in order to populate the user's profile (default: false) */\n    loadUserInfo?: boolean;\n    /** Number (in seconds) indicating the age of state entries in storage for authorize requests that are considered abandoned and thus can be cleaned up (default: 900) */\n    staleStateAgeInSeconds?: number;\n\n    /** @deprecated Unused */\n    clockSkewInSeconds?: number;\n    /** @deprecated Unused */\n    userInfoJwtIssuer?: /*\"ANY\" | \"OP\" |*/ string;\n\n    /**\n     * Indicates if objects returned from the user info endpoint as claims (e.g. `address`) are merged into the claims from the id token as a single object.\n     * Otherwise, they are added to an array as distinct objects for the claim type. (default: false)\n     */\n    mergeClaims?: boolean;\n\n    /**\n     * Storage object used to persist interaction state (default: window.localStorage, InMemoryWebStorage iff no window).\n     * E.g. `stateStore: new WebStorageStateStore({ store: window.localStorage })`\n     */\n    stateStore?: StateStore;\n\n    /**\n     * An object containing additional query string parameters to be including in the authorization request.\n     * E.g, when using Azure AD to obtain an access token an additional resource parameter is required. extraQueryParams: `{resource:\"some_identifier\"}`\n     */\n    extraQueryParams?: Record<string, string | number | boolean>;\n\n    extraTokenParams?: Record<string, unknown>;\n\n    /**\n     * An object containing additional header to be including in request.\n     */\n    extraHeaders?: Record<string, ExtraHeader>;\n\n    /**\n     * @deprecated since version 2.1.0. Use fetchRequestCredentials instead.\n     */\n    refreshTokenCredentials?: \"same-origin\" | \"include\" | \"omit\";\n\n    /**\n     * Will check the content type header of the response of the revocation endpoint to match these passed values (default: [])\n     */\n    revokeTokenAdditionalContentTypes?: string[];\n    /**\n     * Will disable pkce validation, changing to true will not append to sign in request code_challenge and code_challenge_method. (default: false)\n     */\n    disablePKCE?: boolean;\n    /**\n     * Sets the credentials for fetch requests. (default: \"same-origin\")\n     * Use this if you need to send cookies to the OIDC/OAuth2 provider or if you are using a proxy that requires cookies\n     */\n    fetchRequestCredentials?: RequestCredentials;\n\n    /**\n     * Only scopes in this list will be passed in the token refresh request.\n     */\n    refreshTokenAllowedScope?: string | undefined;\n}\n\n/**\n * The settings with defaults applied of the {@link OidcClient}.\n * @see {@link OidcClientSettings}\n *\n * @public\n */\nexport class OidcClientSettingsStore {\n    // metadata\n    public readonly authority: string;\n    public readonly metadataUrl: string;\n    public readonly metadata: Partial<OidcMetadata> | undefined;\n    public readonly metadataSeed: Partial<OidcMetadata> | undefined;\n    public readonly signingKeys: SigningKey[] | undefined;\n\n    // client config\n    public readonly client_id: string;\n    public readonly client_secret: string | undefined;\n    public readonly response_type: string;\n    public readonly scope: string;\n    public readonly redirect_uri: string;\n    public readonly post_logout_redirect_uri: string | undefined;\n    public readonly client_authentication: \"client_secret_basic\" | \"client_secret_post\";\n\n    // optional protocol params\n    public readonly prompt: string | undefined;\n    public readonly display: string | undefined;\n    public readonly max_age: number | undefined;\n    public readonly ui_locales: string | undefined;\n    public readonly acr_values: string | undefined;\n    public readonly resource: string | string[] | undefined;\n    public readonly response_mode: \"query\" | \"fragment\";\n\n    // behavior flags\n    public readonly filterProtocolClaims: boolean | string[];\n    public readonly loadUserInfo: boolean;\n    public readonly staleStateAgeInSeconds: number;\n    public readonly clockSkewInSeconds: number;\n    public readonly userInfoJwtIssuer: /*\"ANY\" | \"OP\" |*/ string;\n    public readonly mergeClaims: boolean;\n\n    public readonly stateStore: StateStore;\n\n    // extra\n    public readonly extraQueryParams: Record<string, string | number | boolean>;\n    public readonly extraTokenParams: Record<string, unknown>;\n    public readonly extraHeaders: Record<string, ExtraHeader>;\n\n    public readonly revokeTokenAdditionalContentTypes?: string[];\n    public readonly fetchRequestCredentials: RequestCredentials;\n    public readonly refreshTokenAllowedScope: string | undefined;\n    public readonly disablePKCE: boolean;\n\n    public constructor({\n        // metadata related\n        authority, metadataUrl, metadata, signingKeys, metadataSeed,\n        // client related\n        client_id, client_secret, response_type = DefaultResponseType, scope = DefaultScope,\n        redirect_uri, post_logout_redirect_uri,\n        client_authentication = DefaultClientAuthentication,\n        // optional protocol\n        prompt, display, max_age, ui_locales, acr_values, resource, response_mode = DefaultResponseMode,\n        // behavior flags\n        filterProtocolClaims = true,\n        loadUserInfo = false,\n        staleStateAgeInSeconds = DefaultStaleStateAgeInSeconds,\n        clockSkewInSeconds = DefaultClockSkewInSeconds,\n        userInfoJwtIssuer = \"OP\",\n        mergeClaims = false,\n        disablePKCE = false,\n        // other behavior\n        stateStore,\n        refreshTokenCredentials,\n        revokeTokenAdditionalContentTypes,\n        fetchRequestCredentials,\n        refreshTokenAllowedScope,\n        // extra\n        extraQueryParams = {},\n        extraTokenParams = {},\n        extraHeaders = {},\n    }: OidcClientSettings) {\n\n        this.authority = authority;\n\n        if (metadataUrl) {\n            this.metadataUrl = metadataUrl;\n        } else {\n            this.metadataUrl = authority;\n            if (authority) {\n                if (!this.metadataUrl.endsWith(\"/\")) {\n                    this.metadataUrl += \"/\";\n                }\n                this.metadataUrl += \".well-known/openid-configuration\";\n            }\n        }\n\n        this.metadata = metadata;\n        this.metadataSeed = metadataSeed;\n        this.signingKeys = signingKeys;\n\n        this.client_id = client_id;\n        this.client_secret = client_secret;\n        this.response_type = response_type;\n        this.scope = scope;\n        this.redirect_uri = redirect_uri;\n        this.post_logout_redirect_uri = post_logout_redirect_uri;\n        this.client_authentication = client_authentication;\n\n        this.prompt = prompt;\n        this.display = display;\n        this.max_age = max_age;\n        this.ui_locales = ui_locales;\n        this.acr_values = acr_values;\n        this.resource = resource;\n        this.response_mode = response_mode;\n\n        this.filterProtocolClaims = filterProtocolClaims ?? true;\n        this.loadUserInfo = !!loadUserInfo;\n        this.staleStateAgeInSeconds = staleStateAgeInSeconds;\n        this.clockSkewInSeconds = clockSkewInSeconds;\n        this.userInfoJwtIssuer = userInfoJwtIssuer;\n        this.mergeClaims = !!mergeClaims;\n        this.disablePKCE = !!disablePKCE;\n        this.revokeTokenAdditionalContentTypes = revokeTokenAdditionalContentTypes;\n\n        if (fetchRequestCredentials && refreshTokenCredentials) {\n            console.warn(\"Both fetchRequestCredentials and refreshTokenCredentials is set. Only fetchRequestCredentials will be used.\");\n        }\n        this.fetchRequestCredentials = fetchRequestCredentials ? fetchRequestCredentials\n            : refreshTokenCredentials ? refreshTokenCredentials : \"same-origin\";\n\n        if (stateStore) {\n            this.stateStore = stateStore;\n        }\n        else {\n            const store = typeof window !== \"undefined\" ? window.localStorage : new InMemoryWebStorage();\n            this.stateStore = new WebStorageStateStore({ store });\n        }\n\n        this.refreshTokenAllowedScope = refreshTokenAllowedScope;\n\n        this.extraQueryParams = extraQueryParams;\n        this.extraTokenParams = extraTokenParams;\n        this.extraHeaders = extraHeaders;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { CryptoUtils, Logger } from \"./utils\";\nimport { JsonService } from \"./JsonService\";\nimport type { MetadataService } from \"./MetadataService\";\nimport type { OidcClientSettingsStore } from \"./OidcClientSettings\";\n\n/**\n * @internal\n */\nexport interface ExchangeCodeArgs {\n    client_id?: string;\n    client_secret?: string;\n    redirect_uri?: string;\n\n    grant_type?: string;\n    code: string;\n    code_verifier?: string;\n}\n\n/**\n * @internal\n */\nexport interface ExchangeCredentialsArgs {\n    client_id?: string;\n    client_secret?: string;\n\n    grant_type?: string;\n    scope?: string;\n\n    username: string;\n    password: string;\n}\n\n/**\n * @internal\n */\nexport interface ExchangeRefreshTokenArgs {\n    client_id?: string;\n    client_secret?: string;\n\n    grant_type?: string;\n    refresh_token: string;\n    scope?: string;\n    resource?: string | string[];\n\n    timeoutInSeconds?: number;\n}\n\n/**\n * @internal\n */\nexport interface RevokeArgs {\n    token: string;\n    token_type_hint?: \"access_token\" | \"refresh_token\";\n}\n\n/**\n * @internal\n */\nexport class TokenClient {\n    private readonly _logger = new Logger(\"TokenClient\");\n    private readonly _jsonService;\n\n    public constructor(\n        private readonly _settings: OidcClientSettingsStore,\n        private readonly _metadataService: MetadataService,\n    ) {\n        this._jsonService = new JsonService(\n            this._settings.revokeTokenAdditionalContentTypes,\n            null,\n            this._settings.extraHeaders,\n        );\n    }\n\n    /**\n     * Exchange code.\n     *\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3\n     */\n    public async exchangeCode({\n        grant_type = \"authorization_code\",\n        redirect_uri = this._settings.redirect_uri,\n        client_id = this._settings.client_id,\n        client_secret = this._settings.client_secret,\n        ...args\n    }: ExchangeCodeArgs): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"exchangeCode\");\n        if (!client_id) {\n            logger.throw(new Error(\"A client_id is required\"));\n        }\n        if (!redirect_uri) {\n            logger.throw(new Error(\"A redirect_uri is required\"));\n        }\n        if (!args.code) {\n            logger.throw(new Error(\"A code is required\"));\n        }\n\n        const params = new URLSearchParams({ grant_type, redirect_uri });\n        for (const [key, value] of Object.entries(args)) {\n            if (value != null) {\n                params.set(key, value);\n            }\n        }\n        let basicAuth: string | undefined;\n        switch (this._settings.client_authentication) {\n            case \"client_secret_basic\":\n                if (!client_secret) {\n                    logger.throw(new Error(\"A client_secret is required\"));\n                    throw null; // https://github.com/microsoft/TypeScript/issues/46972\n                }\n                basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n                break;\n            case \"client_secret_post\":\n                params.append(\"client_id\", client_id);\n                if (client_secret) {\n                    params.append(\"client_secret\", client_secret);\n                }\n                break;\n        }\n\n        const url = await this._metadataService.getTokenEndpoint(false);\n        logger.debug(\"got token endpoint\");\n\n        const response = await this._jsonService.postForm(url, { body: params, basicAuth, initCredentials: this._settings.fetchRequestCredentials });\n        logger.debug(\"got response\");\n\n        return response;\n    }\n\n    /**\n     * Exchange credentials.\n     *\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.3.2\n     */\n    public async exchangeCredentials({\n        grant_type = \"password\",\n        client_id = this._settings.client_id,\n        client_secret = this._settings.client_secret,\n        scope = this._settings.scope,\n        ...args\n    }: ExchangeCredentialsArgs): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"exchangeCredentials\");\n\n        if (!client_id) {\n            logger.throw(new Error(\"A client_id is required\"));\n        }\n\n        const params = new URLSearchParams({ grant_type, scope });\n        for (const [key, value] of Object.entries(args)) {\n            if (value != null) {\n                params.set(key, value);\n            }\n        }\n\n        let basicAuth: string | undefined;\n        switch (this._settings.client_authentication) {\n            case \"client_secret_basic\":\n                if (!client_secret) {\n                    logger.throw(new Error(\"A client_secret is required\"));\n                    throw null; // https://github.com/microsoft/TypeScript/issues/46972\n                }\n                basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n                break;\n            case \"client_secret_post\":\n                params.append(\"client_id\", client_id);\n                if (client_secret) {\n                    params.append(\"client_secret\", client_secret);\n                }\n                break;\n        }\n\n        const url = await this._metadataService.getTokenEndpoint(false);\n        logger.debug(\"got token endpoint\");\n\n        const response = await this._jsonService.postForm(url, { body: params, basicAuth, initCredentials: this._settings.fetchRequestCredentials });\n        logger.debug(\"got response\");\n\n        return response;\n    }\n\n    /**\n     * Exchange a refresh token.\n     *\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-6\n     */\n    public async exchangeRefreshToken({\n        grant_type = \"refresh_token\",\n        client_id = this._settings.client_id,\n        client_secret = this._settings.client_secret,\n        timeoutInSeconds,\n        ...args\n    }: ExchangeRefreshTokenArgs): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"exchangeRefreshToken\");\n        if (!client_id) {\n            logger.throw(new Error(\"A client_id is required\"));\n        }\n        if (!args.refresh_token) {\n            logger.throw(new Error(\"A refresh_token is required\"));\n        }\n\n        const params = new URLSearchParams({ grant_type });\n        for (const [key, value] of Object.entries(args)) {\n            if (Array.isArray(value)) {\n                value.forEach(param => params.append(key, param));\n            }\n            else if (value != null) {\n                params.set(key, value);\n            }\n        }\n        let basicAuth: string | undefined;\n        switch (this._settings.client_authentication) {\n            case \"client_secret_basic\":\n                if (!client_secret) {\n                    logger.throw(new Error(\"A client_secret is required\"));\n                    throw null; // https://github.com/microsoft/TypeScript/issues/46972\n                }\n                basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n                break;\n            case \"client_secret_post\":\n                params.append(\"client_id\", client_id);\n                if (client_secret) {\n                    params.append(\"client_secret\", client_secret);\n                }\n                break;\n        }\n\n        const url = await this._metadataService.getTokenEndpoint(false);\n        logger.debug(\"got token endpoint\");\n\n        const response = await this._jsonService.postForm(url, { body: params, basicAuth, timeoutInSeconds, initCredentials: this._settings.fetchRequestCredentials });\n        logger.debug(\"got response\");\n\n        return response;\n    }\n\n    /**\n     * Revoke an access or refresh token.\n     *\n     * @see https://datatracker.ietf.org/doc/html/rfc7009#section-2.1\n     */\n    public async revoke(args: RevokeArgs): Promise<void> {\n        const logger = this._logger.create(\"revoke\");\n        if (!args.token) {\n            logger.throw(new Error(\"A token is required\"));\n        }\n\n        const url = await this._metadataService.getRevocationEndpoint(false);\n\n        logger.debug(`got revocation endpoint, revoking ${args.token_type_hint ?? \"default token type\"}`);\n\n        const params = new URLSearchParams();\n        for (const [key, value] of Object.entries(args)) {\n            if (value != null) {\n                params.set(key, value);\n            }\n        }\n        params.set(\"client_id\", this._settings.client_id);\n        if (this._settings.client_secret) {\n            params.set(\"client_secret\", this._settings.client_secret);\n        }\n\n        await this._jsonService.postForm(url, { body: params });\n        logger.debug(\"got response\");\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, CryptoUtils, Timer } from \"./utils\";\nimport type { StateStore } from \"./StateStore\";\n\n/**\n * @public\n */\nexport class State {\n    public readonly id: string;\n    public readonly created: number;\n    public readonly request_type: string | undefined;\n\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    public readonly data?: unknown;\n\n    public constructor(args: {\n        id?: string;\n        data?: unknown;\n        created?: number;\n        request_type?: string;\n    }) {\n        this.id = args.id || CryptoUtils.generateUUIDv4();\n        this.data = args.data;\n\n        if (args.created && args.created > 0) {\n            this.created = args.created;\n        }\n        else {\n            this.created = Timer.getEpochTime();\n        }\n        this.request_type = args.request_type;\n    }\n\n    public toStorageString(): string {\n        new Logger(\"State\").create(\"toStorageString\");\n        return JSON.stringify({\n            id: this.id,\n            data: this.data,\n            created: this.created,\n            request_type: this.request_type,\n        });\n    }\n\n    public static fromStorageString(storageString: string): State {\n        Logger.createStatic(\"State\", \"fromStorageString\");\n        return new State(JSON.parse(storageString));\n    }\n\n    public static async clearStaleState(storage: StateStore, age: number): Promise<void> {\n        const logger = Logger.createStatic(\"State\", \"clearStaleState\");\n        const cutoff = Timer.getEpochTime() - age;\n\n        const keys = await storage.getAllKeys();\n        logger.debug(\"got keys\", keys);\n\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            const item = await storage.get(key);\n            let remove = false;\n\n            if (item) {\n                try {\n                    const state = State.fromStorageString(item);\n\n                    logger.debug(\"got item from key:\", key, state.created);\n                    if (state.created <= cutoff) {\n                        remove = true;\n                    }\n                }\n                catch (err) {\n                    logger.error(\"Error parsing state for key:\", key, err);\n                    remove = true;\n                }\n            }\n            else {\n                logger.debug(\"no item in storage for key:\", key);\n                remove = true;\n            }\n\n            if (remove) {\n                logger.debug(\"removed item for key:\", key);\n                void storage.remove(key);\n            }\n        }\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, CryptoUtils } from \"./utils\";\nimport { State } from \"./State\";\n\n/**\n * @public\n */\nexport class SigninState extends State {\n    // isCode\n    /** The same code_verifier that was used to obtain the authorization_code via PKCE. */\n    public readonly code_verifier: string | undefined;\n    /** Used to secure authorization code grants via Proof Key for Code Exchange (PKCE). */\n    public readonly code_challenge: string | undefined;\n\n    // to ensure state still matches settings\n    /** @see {@link OidcClientSettings.authority} */\n    public readonly authority: string;\n    /** @see {@link OidcClientSettings.client_id} */\n    public readonly client_id: string;\n    /** @see {@link OidcClientSettings.redirect_uri} */\n    public readonly redirect_uri: string;\n    /** @see {@link OidcClientSettings.scope} */\n    public readonly scope: string;\n    /** @see {@link OidcClientSettings.client_secret} */\n    public readonly client_secret: string | undefined;\n    /** @see {@link OidcClientSettings.extraTokenParams} */\n    public readonly extraTokenParams: Record<string, unknown> | undefined;\n    /** @see {@link OidcClientSettings.response_mode} */\n    public readonly response_mode: \"query\" | \"fragment\" | undefined;\n\n    public readonly skipUserInfo: boolean | undefined;\n\n    public constructor(args: {\n        id?: string;\n        data?: unknown;\n        created?: number;\n        request_type?: string;\n\n        code_verifier?: string | boolean;\n        authority: string;\n        client_id: string;\n        redirect_uri: string;\n        scope: string;\n        client_secret?: string;\n        extraTokenParams?: Record<string, unknown>;\n        response_mode?: \"query\" | \"fragment\";\n        skipUserInfo?: boolean;\n    }) {\n        super(args);\n\n        if (args.code_verifier === true) {\n            this.code_verifier = CryptoUtils.generateCodeVerifier();\n        }\n        else if (args.code_verifier) {\n            this.code_verifier = args.code_verifier;\n        }\n\n        if (this.code_verifier) {\n            this.code_challenge = CryptoUtils.generateCodeChallenge(this.code_verifier);\n        }\n\n        this.authority = args.authority;\n        this.client_id = args.client_id;\n        this.redirect_uri = args.redirect_uri;\n        this.scope = args.scope;\n        this.client_secret = args.client_secret;\n        this.extraTokenParams = args.extraTokenParams;\n\n        this.response_mode = args.response_mode;\n        this.skipUserInfo = args.skipUserInfo;\n    }\n\n    public toStorageString(): string {\n        new Logger(\"SigninState\").create(\"toStorageString\");\n        return JSON.stringify({\n            id: this.id,\n            data: this.data,\n            created: this.created,\n            request_type: this.request_type,\n\n            code_verifier: this.code_verifier,\n            authority: this.authority,\n            client_id: this.client_id,\n            redirect_uri: this.redirect_uri,\n            scope: this.scope,\n            client_secret: this.client_secret,\n            extraTokenParams : this.extraTokenParams,\n            response_mode: this.response_mode,\n            skipUserInfo: this.skipUserInfo,\n        });\n    }\n\n    public static fromStorageString(storageString: string): SigninState {\n        Logger.createStatic(\"SigninState\", \"fromStorageString\");\n        const data = JSON.parse(storageString);\n        return new SigninState(data);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Timer } from \"./utils\";\nimport type { UserProfile } from \"./User\";\n\nconst OidcScope = \"openid\";\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-core-1_0.html#AuthResponse\n * @see https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n */\nexport class SigninResponse {\n    // props present in the initial callback response regardless of success\n    public readonly state: string | null;\n    /** @see {@link User.session_state} */\n    public session_state: string | null;\n\n    // error props\n    /** @see {@link ErrorResponse.error} */\n    public readonly error: string | null;\n    /** @see {@link ErrorResponse.error_description} */\n    public readonly error_description: string | null;\n    /** @see {@link ErrorResponse.error_uri} */\n    public readonly error_uri: string | null;\n\n    // success props\n    public readonly code: string | null;\n\n    // props set after validation\n    /** @see {@link User.id_token} */\n    public id_token?: string;\n    /** @see {@link User.access_token} */\n    public access_token = \"\";\n    /** @see {@link User.token_type} */\n    public token_type = \"\";\n    /** @see {@link User.refresh_token} */\n    public refresh_token?: string;\n    /** @see {@link User.scope} */\n    public scope?: string;\n    /** @see {@link User.expires_at} */\n    public expires_at?: number;\n\n    /** custom state data set during the initial signin request */\n    public userState: unknown;\n\n    /** @see {@link User.profile} */\n    public profile: UserProfile = {} as UserProfile;\n\n    public constructor(params: URLSearchParams) {\n        this.state = params.get(\"state\");\n        this.session_state = params.get(\"session_state\");\n\n        this.error = params.get(\"error\");\n        this.error_description = params.get(\"error_description\");\n        this.error_uri = params.get(\"error_uri\");\n\n        this.code = params.get(\"code\");\n    }\n\n    public get expires_in(): number | undefined {\n        if (this.expires_at === undefined) {\n            return undefined;\n        }\n        return this.expires_at - Timer.getEpochTime();\n    }\n    public set expires_in(value: number | undefined) {\n        // spec expects a number, but normalize here just in case\n        if (typeof value === \"string\") value = Number(value);\n        if (value !== undefined && value >= 0) {\n            this.expires_at = Math.floor(value) + Timer.getEpochTime();\n        }\n    }\n\n    public get isOpenId(): boolean {\n        return this.scope?.split(\" \").includes(OidcScope) || !!this.id_token;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n */\nexport class SignoutResponse {\n    public readonly state: string | null;\n\n    // error props\n    /** @see {@link ErrorResponse.error} */\n    public error: string | null;\n    /** @see {@link ErrorResponse.error_description} */\n    public error_description: string | null;\n    /** @see {@link ErrorResponse.error_uri} */\n    public error_uri: string | null;\n\n    /** custom state data set during the initial signin request */\n    public userState: unknown;\n\n    public constructor(params: URLSearchParams) {\n        this.state = params.get(\"state\");\n\n        this.error = params.get(\"error\");\n        this.error_description = params.get(\"error_description\");\n        this.error_uri = params.get(\"error_uri\");\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport type { JwtClaims } from \"./Claims\";\nimport type { OidcClientSettingsStore } from \"./OidcClientSettings\";\nimport type { UserProfile } from \"./User\";\nimport { Logger } from \"./utils\";\n\n/**\n * Protocol claims that could be removed by default from profile.\n * Derived from the following sets of claims:\n * - {@link https://datatracker.ietf.org/doc/html/rfc7519.html#section-4.1}\n * - {@link https://openid.net/specs/openid-connect-core-1_0.html#IDToken}\n * - {@link https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken}\n *\n * @internal\n */\nconst DefaultProtocolClaims = [\n    \"nbf\",\n    \"jti\",\n    \"auth_time\",\n    \"nonce\",\n    \"acr\",\n    \"amr\",\n    \"azp\",\n    \"at_hash\", // https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken\n] as const;\n\n/**\n * Protocol claims that should never be removed from profile.\n * \"sub\" is needed internally and others should remain required as per the OIDC specs.\n *\n * @internal\n */\nconst InternalRequiredProtocolClaims = [\"sub\", \"iss\", \"aud\", \"exp\", \"iat\"];\n\n/**\n * @internal\n */\nexport class ClaimsService {\n    protected readonly _logger = new Logger(\"ClaimsService\");\n    public constructor(\n        protected readonly _settings: OidcClientSettingsStore,\n    ) {}\n\n    public filterProtocolClaims(claims: UserProfile): UserProfile {\n        const result = { ...claims };\n\n        if (this._settings.filterProtocolClaims) {\n            let protocolClaims;\n            if (Array.isArray(this._settings.filterProtocolClaims)) {\n                protocolClaims = this._settings.filterProtocolClaims;\n            } else {\n                protocolClaims = DefaultProtocolClaims;\n            }\n\n            for (const claim of protocolClaims) {\n                if (!InternalRequiredProtocolClaims.includes(claim)) {\n                    delete result[claim];\n                }\n            }\n        }\n\n        return result;\n    }\n\n    public mergeClaims(claims1: UserProfile, claims2: JwtClaims): UserProfile {\n        const result = { ...claims1 };\n\n        for (const [claim, values] of Object.entries(claims2)) {\n            for (const value of Array.isArray(values) ? values : [values]) {\n                const previousValue = result[claim];\n                if (!previousValue) {\n                    result[claim] = value;\n                }\n                else if (Array.isArray(previousValue)) {\n                    if (!previousValue.includes(value)) {\n                        previousValue.push(value);\n                    }\n                }\n                else if (result[claim] !== value) {\n                    if (typeof value === \"object\" && this._settings.mergeClaims) {\n                        result[claim] = this.mergeClaims(previousValue as UserProfile, value);\n                    }\n                    else {\n                        result[claim] = [previousValue, value];\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, UrlUtils } from \"./utils\";\nimport { ErrorResponse } from \"./errors\";\nimport { type OidcClientSettings, OidcClientSettingsStore } from \"./OidcClientSettings\";\nimport { ResponseValidator } from \"./ResponseValidator\";\nimport { MetadataService } from \"./MetadataService\";\nimport type { RefreshState } from \"./RefreshState\";\nimport { SigninRequest, type SigninRequestArgs } from \"./SigninRequest\";\nimport { SigninResponse } from \"./SigninResponse\";\nimport { SignoutRequest, type SignoutRequestArgs } from \"./SignoutRequest\";\nimport { SignoutResponse } from \"./SignoutResponse\";\nimport { SigninState } from \"./SigninState\";\nimport { State } from \"./State\";\nimport { TokenClient } from \"./TokenClient\";\nimport { ClaimsService } from \"./ClaimsService\";\n\n/**\n * @public\n */\nexport interface CreateSigninRequestArgs\n    extends Omit<SigninRequestArgs, \"url\" | \"authority\" | \"client_id\" | \"redirect_uri\" | \"response_type\" | \"scope\" | \"state_data\"> {\n    redirect_uri?: string;\n    response_type?: string;\n    scope?: string;\n\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    state?: unknown;\n}\n\n/**\n * @public\n */\nexport interface UseRefreshTokenArgs {\n    state: RefreshState;\n    timeoutInSeconds?: number;\n}\n\n/**\n * @public\n */\nexport type CreateSignoutRequestArgs = Omit<SignoutRequestArgs, \"url\" | \"state_data\"> & {\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    state?: unknown;\n};\n\n/**\n * @public\n */\nexport type ProcessResourceOwnerPasswordCredentialsArgs = {\n    username: string;\n    password: string;\n    skipUserInfo?: boolean;\n    extraTokenParams?: Record<string, unknown>;\n};\n\n/**\n * Provides the raw OIDC/OAuth2 protocol support for the authorization endpoint and the end session endpoint in the\n * authorization server. It provides a bare-bones protocol implementation and is used by the UserManager class.\n * Only use this class if you simply want protocol support without the additional management features of the\n * UserManager class.\n *\n * @public\n */\nexport class OidcClient {\n    public readonly settings: OidcClientSettingsStore;\n    protected readonly _logger = new Logger(\"OidcClient\");\n\n    public readonly metadataService: MetadataService;\n    protected readonly _claimsService: ClaimsService;\n    protected readonly _validator: ResponseValidator;\n    protected readonly _tokenClient: TokenClient;\n\n    public constructor(settings: OidcClientSettings);\n    public constructor(settings: OidcClientSettingsStore, metadataService: MetadataService); \n    public constructor(settings: OidcClientSettings | OidcClientSettingsStore, metadataService?: MetadataService) {\n        this.settings = settings instanceof OidcClientSettingsStore ? settings : new OidcClientSettingsStore(settings);\n\n        this.metadataService = metadataService ?? new MetadataService(this.settings);\n        this._claimsService = new ClaimsService(this.settings);\n        this._validator = new ResponseValidator(this.settings, this.metadataService, this._claimsService);\n        this._tokenClient = new TokenClient(this.settings, this.metadataService);\n    }\n\n    public async createSigninRequest({\n        state,\n        request,\n        request_uri,\n        request_type,\n        id_token_hint,\n        login_hint,\n        skipUserInfo,\n        nonce,\n        response_type = this.settings.response_type,\n        scope = this.settings.scope,\n        redirect_uri = this.settings.redirect_uri,\n        prompt = this.settings.prompt,\n        display = this.settings.display,\n        max_age = this.settings.max_age,\n        ui_locales = this.settings.ui_locales,\n        acr_values = this.settings.acr_values,\n        resource = this.settings.resource,\n        response_mode = this.settings.response_mode,\n        extraQueryParams = this.settings.extraQueryParams,\n        extraTokenParams = this.settings.extraTokenParams,\n    }: CreateSigninRequestArgs): Promise<SigninRequest> {\n        const logger = this._logger.create(\"createSigninRequest\");\n\n        if (response_type !== \"code\") {\n            throw new Error(\"Only the Authorization Code flow (with PKCE) is supported\");\n        }\n\n        const url = await this.metadataService.getAuthorizationEndpoint();\n        logger.debug(\"Received authorization endpoint\", url);\n\n        const signinRequest = new SigninRequest({\n            url,\n            authority: this.settings.authority,\n            client_id: this.settings.client_id,\n            redirect_uri,\n            response_type,\n            scope,\n            state_data: state,\n            prompt, display, max_age, ui_locales, id_token_hint, login_hint, acr_values,\n            resource, request, request_uri, extraQueryParams, extraTokenParams, request_type, response_mode,\n            client_secret: this.settings.client_secret,\n            skipUserInfo,\n            nonce,\n            disablePKCE: this.settings.disablePKCE,\n        });\n\n        // house cleaning\n        await this.clearStaleState();\n\n        const signinState = signinRequest.state;\n        await this.settings.stateStore.set(signinState.id, signinState.toStorageString());\n        return signinRequest;\n    }\n\n    public async readSigninResponseState(url: string, removeState = false): Promise<{ state: SigninState; response: SigninResponse }> {\n        const logger = this._logger.create(\"readSigninResponseState\");\n\n        const response = new SigninResponse(UrlUtils.readParams(url, this.settings.response_mode));\n        if (!response.state) {\n            logger.throw(new Error(\"No state in response\"));\n            // need to throw within this function's body for type narrowing to work\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n        if (!storedStateString) {\n            logger.throw(new Error(\"No matching state found in storage\"));\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        const state = SigninState.fromStorageString(storedStateString);\n        return { state, response };\n    }\n\n    public async processSigninResponse(url: string): Promise<SigninResponse> {\n        const logger = this._logger.create(\"processSigninResponse\");\n\n        const { state, response } = await this.readSigninResponseState(url, true);\n        logger.debug(\"received state from storage; validating response\");\n        await this._validator.validateSigninResponse(response, state);\n        return response;\n    }\n\n    public async processResourceOwnerPasswordCredentials({\n        username,\n        password,\n        skipUserInfo = false,\n        extraTokenParams = {},\n    }: ProcessResourceOwnerPasswordCredentialsArgs): Promise<SigninResponse> {\n        const tokenResponse: Record<string, unknown> = await this._tokenClient.exchangeCredentials({ username, password, ...extraTokenParams });\n        const signinResponse: SigninResponse = new SigninResponse(new URLSearchParams());\n        Object.assign(signinResponse, tokenResponse);\n        await this._validator.validateCredentialsResponse(signinResponse, skipUserInfo);\n        return signinResponse;\n    }\n\n    public async useRefreshToken({\n        state,\n        timeoutInSeconds,\n    }: UseRefreshTokenArgs): Promise<SigninResponse> {\n        const logger = this._logger.create(\"useRefreshToken\");\n\n        // https://github.com/authts/oidc-client-ts/issues/695\n        // In some cases (e.g. AzureAD), not all granted scopes are allowed on token refresh requests.\n        // Therefore, we filter all granted scopes by a list of allowable scopes.\n        let scope;\n        if (this.settings.refreshTokenAllowedScope === undefined) {\n            scope = state.scope;\n        } else {\n            const allowableScopes = this.settings.refreshTokenAllowedScope.split(\" \");\n            const providedScopes = state.scope?.split(\" \") || [];\n\n            scope = providedScopes.filter(s => allowableScopes.includes(s)).join(\" \");\n        }\n\n        const result = await this._tokenClient.exchangeRefreshToken({\n            refresh_token: state.refresh_token,\n            resource: state.resource,\n            // provide the (possible filtered) scope list\n            scope,\n            timeoutInSeconds,\n        });\n        const response = new SigninResponse(new URLSearchParams());\n        Object.assign(response, result);\n        logger.debug(\"validating response\", response);\n        await this._validator.validateRefreshResponse(response, {\n            ...state,\n            // overide the scope in the state handed over to the validator\n            // so it can set the granted scope to the requested scope in case none is included in the response\n            scope,\n        });\n        return response;\n    }\n\n    public async createSignoutRequest({\n        state,\n        id_token_hint,\n        client_id,\n        request_type,\n        post_logout_redirect_uri = this.settings.post_logout_redirect_uri,\n        extraQueryParams = this.settings.extraQueryParams,\n    }: CreateSignoutRequestArgs = {}): Promise<SignoutRequest> {\n        const logger = this._logger.create(\"createSignoutRequest\");\n\n        const url = await this.metadataService.getEndSessionEndpoint();\n        if (!url) {\n            logger.throw(new Error(\"No end session endpoint\"));\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        logger.debug(\"Received end session endpoint\", url);\n\n        // specify the client identifier when post_logout_redirect_uri is used but id_token_hint is not\n        if (!client_id && post_logout_redirect_uri && !id_token_hint) {\n            client_id = this.settings.client_id;\n        }\n\n        const request = new SignoutRequest({\n            url,\n            id_token_hint,\n            client_id,\n            post_logout_redirect_uri,\n            state_data: state,\n            extraQueryParams,\n            request_type,\n        });\n\n        // house cleaning\n        await this.clearStaleState();\n\n        const signoutState = request.state;\n        if (signoutState) {\n            logger.debug(\"Signout request has state to persist\");\n            await this.settings.stateStore.set(signoutState.id, signoutState.toStorageString());\n        }\n\n        return request;\n    }\n\n    public async readSignoutResponseState(url: string, removeState = false): Promise<{ state: State | undefined; response: SignoutResponse }> {\n        const logger = this._logger.create(\"readSignoutResponseState\");\n\n        const response = new SignoutResponse(UrlUtils.readParams(url, this.settings.response_mode));\n        if (!response.state) {\n            logger.debug(\"No state in response\");\n\n            if (response.error) {\n                logger.warn(\"Response was error:\", response.error);\n                throw new ErrorResponse(response);\n            }\n\n            return { state: undefined, response };\n        }\n\n        const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n        if (!storedStateString) {\n            logger.throw(new Error(\"No matching state found in storage\"));\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        const state = State.fromStorageString(storedStateString);\n        return { state, response };\n    }\n\n    public async processSignoutResponse(url: string): Promise<SignoutResponse> {\n        const logger = this._logger.create(\"processSignoutResponse\");\n\n        const { state, response } = await this.readSignoutResponseState(url, true);\n        if (state) {\n            logger.debug(\"Received state from storage; validating response\");\n            this._validator.validateSignoutResponse(response, state);\n        } else {\n            logger.debug(\"No state from storage; skipping response validation\");\n        }\n\n        return response;\n    }\n\n    public clearStaleState(): Promise<void> {\n        this._logger.create(\"clearStaleState\");\n        return State.clearStaleState(this.settings.stateStore, this.settings.staleStateAgeInSeconds);\n    }\n\n    public async revokeToken(token: string, type?: \"access_token\" | \"refresh_token\"): Promise<void> {\n        this._logger.create(\"revokeToken\");\n        return await this._tokenClient.revoke({\n            token,\n            token_type_hint: type,\n        });\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, JwtUtils } from \"./utils\";\nimport { ErrorResponse } from \"./errors\";\nimport type { MetadataService } from \"./MetadataService\";\nimport { UserInfoService } from \"./UserInfoService\";\nimport { TokenClient } from \"./TokenClient\";\nimport type { OidcClientSettingsStore } from \"./OidcClientSettings\";\nimport type { SigninState } from \"./SigninState\";\nimport type { SigninResponse } from \"./SigninResponse\";\nimport type { State } from \"./State\";\nimport type { SignoutResponse } from \"./SignoutResponse\";\nimport type { UserProfile } from \"./User\";\nimport type { RefreshState } from \"./RefreshState\";\nimport type { IdTokenClaims } from \"./Claims\";\nimport type { ClaimsService } from \"./ClaimsService\";\n\n/**\n * @internal\n */\nexport class ResponseValidator {\n    protected readonly _logger = new Logger(\"ResponseValidator\");\n    protected readonly _userInfoService = new UserInfoService(this._settings, this._metadataService);\n    protected readonly _tokenClient = new TokenClient(this._settings, this._metadataService);\n\n    public constructor(\n        protected readonly _settings: OidcClientSettingsStore,\n        protected readonly _metadataService: MetadataService,\n        protected readonly _claimsService: ClaimsService,\n    ) {}\n\n    public async validateSigninResponse(response: SigninResponse, state: SigninState): Promise<void> {\n        const logger = this._logger.create(\"validateSigninResponse\");\n\n        this._processSigninState(response, state);\n        logger.debug(\"state processed\");\n\n        await this._processCode(response, state);\n        logger.debug(\"code processed\");\n\n        if (response.isOpenId) {\n            this._validateIdTokenAttributes(response);\n        }\n        logger.debug(\"tokens validated\");\n\n        await this._processClaims(response, state?.skipUserInfo, response.isOpenId);\n        logger.debug(\"claims processed\");\n    }\n\n    public async validateCredentialsResponse(response: SigninResponse, skipUserInfo: boolean): Promise<void> {\n        const logger = this._logger.create(\"validateCredentialsResponse\");\n\n        if (response.isOpenId) {\n            this._validateIdTokenAttributes(response);\n        }\n        logger.debug(\"tokens validated\");\n\n        await this._processClaims(response, skipUserInfo, response.isOpenId);\n        logger.debug(\"claims processed\");\n    }\n\n    public async validateRefreshResponse(response: SigninResponse, state: RefreshState): Promise<void> {\n        const logger = this._logger.create(\"validateRefreshResponse\");\n\n        response.userState = state.data;\n        // if there's no session_state on the response, copy over session_state from original request\n        response.session_state ??= state.session_state;\n        // if there's no scope on the response, then assume all scopes granted (per-spec) and copy over scopes from original request\n        response.scope ??= state.scope;\n\n        // OpenID Connect Core 1.0 says that id_token is optional in refresh response:\n        // https://openid.net/specs/openid-connect-core-1_0.html#RefreshTokenResponse\n        if (response.isOpenId && !!response.id_token) {\n            this._validateIdTokenAttributes(response, state.id_token);\n            logger.debug(\"ID Token validated\");\n        }\n\n        if (!response.id_token) {\n            // if there's no id_token on the response, copy over id_token from original request\n            response.id_token = state.id_token;\n            // and decoded part too\n            response.profile = state.profile;\n        }\n\n        const hasIdToken = response.isOpenId && !!response.id_token;\n        await this._processClaims(response, false, hasIdToken);\n        logger.debug(\"claims processed\");\n    }\n\n    public validateSignoutResponse(response: SignoutResponse, state: State): void {\n        const logger = this._logger.create(\"validateSignoutResponse\");\n        if (state.id !== response.state) {\n            logger.throw(new Error(\"State does not match\"));\n        }\n\n        // now that we know the state matches, take the stored data\n        // and set it into the response so callers can get their state\n        // this is important for both success & error outcomes\n        logger.debug(\"state validated\");\n        response.userState = state.data;\n\n        if (response.error) {\n            logger.warn(\"Response was error\", response.error);\n            throw new ErrorResponse(response);\n        }\n    }\n\n    protected _processSigninState(response: SigninResponse, state: SigninState): void {\n        const logger = this._logger.create(\"_processSigninState\");\n        if (state.id !== response.state) {\n            logger.throw(new Error(\"State does not match\"));\n        }\n\n        if (!state.client_id) {\n            logger.throw(new Error(\"No client_id on state\"));\n        }\n\n        if (!state.authority) {\n            logger.throw(new Error(\"No authority on state\"));\n        }\n\n        // ensure we're using the correct authority\n        if (this._settings.authority !== state.authority) {\n            logger.throw(new Error(\"authority mismatch on settings vs. signin state\"));\n        }\n        if (this._settings.client_id && this._settings.client_id !== state.client_id) {\n            logger.throw(new Error(\"client_id mismatch on settings vs. signin state\"));\n        }\n\n        // now that we know the state matches, take the stored data\n        // and set it into the response so callers can get their state\n        // this is important for both success & error outcomes\n        logger.debug(\"state validated\");\n        response.userState = state.data;\n        // if there's no scope on the response, then assume all scopes granted (per-spec) and copy over scopes from original request\n        response.scope ??= state.scope;\n\n        if (response.error) {\n            logger.warn(\"Response was error\", response.error);\n            throw new ErrorResponse(response);\n        }\n\n        if (state.code_verifier && !response.code) {\n            logger.throw(new Error(\"Expected code in response\"));\n        }\n\n    }\n\n    protected async _processClaims(response: SigninResponse, skipUserInfo = false, validateSub = true): Promise<void> {\n        const logger = this._logger.create(\"_processClaims\");\n        response.profile = this._claimsService.filterProtocolClaims(response.profile);\n\n        if (skipUserInfo || !this._settings.loadUserInfo || !response.access_token) {\n            logger.debug(\"not loading user info\");\n            return;\n        }\n\n        logger.debug(\"loading user info\");\n        const claims = await this._userInfoService.getClaims(response.access_token);\n        logger.debug(\"user info claims received from user info endpoint\");\n\n        if (validateSub && claims.sub !== response.profile.sub) {\n            logger.throw(new Error(\"subject from UserInfo response does not match subject in ID Token\"));\n        }\n\n        response.profile = this._claimsService.mergeClaims(response.profile, this._claimsService.filterProtocolClaims(claims as IdTokenClaims));\n        logger.debug(\"user info claims received, updated profile:\", response.profile);\n    }\n\n    protected async _processCode(response: SigninResponse, state: SigninState): Promise<void> {\n        const logger = this._logger.create(\"_processCode\");\n        if (response.code) {\n            logger.debug(\"Validating code\");\n            const tokenResponse = await this._tokenClient.exchangeCode({\n                client_id: state.client_id,\n                client_secret: state.client_secret,\n                code: response.code,\n                redirect_uri: state.redirect_uri,\n                code_verifier: state.code_verifier,\n                ...state.extraTokenParams,\n            });\n            Object.assign(response, tokenResponse);\n        } else {\n            logger.debug(\"No code to process\");\n        }\n    }\n\n    protected _validateIdTokenAttributes(response: SigninResponse, existingToken?: string): void {\n        const logger = this._logger.create(\"_validateIdTokenAttributes\");\n\n        logger.debug(\"decoding ID Token JWT\");\n        const incoming = JwtUtils.decode(response.id_token ?? \"\");\n\n        if (!incoming.sub) {\n            logger.throw(new Error(\"ID Token is missing a subject claim\"));\n        }\n\n        if (existingToken) {\n            const existing = JwtUtils.decode(existingToken);\n            if (incoming.sub !== existing.sub) {\n                logger.throw(new Error(\"sub in id_token does not match current sub\"));\n            }\n            if (incoming.auth_time && incoming.auth_time !== existing.auth_time) {\n                logger.throw(new Error(\"auth_time in id_token does not match original auth_time\"));\n            }\n            if (incoming.azp && incoming.azp !== existing.azp) {\n                logger.throw(new Error(\"azp in id_token does not match original azp\"));\n            }\n            if (!incoming.azp && existing.azp) {\n                logger.throw(new Error(\"azp not in id_token, but present in original id_token\"));\n            }\n        }\n\n        response.profile = incoming as UserProfile;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, JwtUtils } from \"./utils\";\nimport { JsonService } from \"./JsonService\";\nimport type { MetadataService } from \"./MetadataService\";\nimport type { JwtClaims } from \"./Claims\";\nimport type { OidcClientSettingsStore } from \"./OidcClientSettings\";\n\n/**\n * @internal\n */\nexport class UserInfoService {\n    protected readonly _logger = new Logger(\"UserInfoService\");\n    private readonly _jsonService: JsonService;\n\n    public constructor(private readonly _settings: OidcClientSettingsStore,\n        private readonly _metadataService: MetadataService,\n    ) {\n        this._jsonService = new JsonService(\n            undefined,\n            this._getClaimsFromJwt,\n            this._settings.extraHeaders,\n        );\n    }\n\n    public async getClaims(token: string): Promise<JwtClaims> {\n        const logger = this._logger.create(\"getClaims\");\n        if (!token) {\n            this._logger.throw(new Error(\"No token passed\"));\n        }\n\n        const url = await this._metadataService.getUserInfoEndpoint();\n        logger.debug(\"got userinfo url\", url);\n\n        const claims = await this._jsonService.getJson(url, {\n            token,\n            credentials: this._settings.fetchRequestCredentials,\n        });\n        logger.debug(\"got claims\", claims);\n\n        return claims;\n    }\n\n    protected _getClaimsFromJwt = async (responseText: string): Promise<JwtClaims> => {\n        const logger = this._logger.create(\"_getClaimsFromJwt\");\n        try {\n            const payload = JwtUtils.decode(responseText);\n            logger.debug(\"JWT decoding successful\");\n\n            return payload;\n        } catch (err) {\n            logger.error(\"Error parsing JWT response\");\n            throw err;\n        }\n    };\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport { SigninState } from \"./SigninState\";\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\n */\nexport interface SigninRequestArgs {\n    // mandatory\n    url: string;\n    authority: string;\n    client_id: string;\n    redirect_uri: string;\n    response_type: string;\n    scope: string;\n\n    // optional\n    response_mode?: \"query\" | \"fragment\";\n    nonce?: string;\n    display?: string;\n    prompt?: string;\n    max_age?: number;\n    ui_locales?: string;\n    id_token_hint?: string;\n    login_hint?: string;\n    acr_values?: string;\n\n    // other\n    resource?: string | string[];\n    request?: string;\n    request_uri?: string;\n    request_type?: string;\n    extraQueryParams?: Record<string, string | number | boolean>;\n\n    // special\n    extraTokenParams?: Record<string, unknown>;\n    client_secret?: string;\n    skipUserInfo?: boolean;\n    disablePKCE?: boolean;\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    state_data?: unknown;\n}\n\n/**\n * @public\n */\nexport class SigninRequest {\n    private readonly _logger = new Logger(\"SigninRequest\");\n\n    public readonly url: string;\n    public readonly state: SigninState;\n\n    public constructor({\n        // mandatory\n        url, authority, client_id, redirect_uri, response_type, scope,\n        // optional\n        state_data, response_mode, request_type, client_secret, nonce,\n        resource,\n        skipUserInfo,\n        extraQueryParams,\n        extraTokenParams,\n        disablePKCE,\n        ...optionalParams\n    }: SigninRequestArgs) {\n        if (!url) {\n            this._logger.error(\"ctor: No url passed\");\n            throw new Error(\"url\");\n        }\n        if (!client_id) {\n            this._logger.error(\"ctor: No client_id passed\");\n            throw new Error(\"client_id\");\n        }\n        if (!redirect_uri) {\n            this._logger.error(\"ctor: No redirect_uri passed\");\n            throw new Error(\"redirect_uri\");\n        }\n        if (!response_type) {\n            this._logger.error(\"ctor: No response_type passed\");\n            throw new Error(\"response_type\");\n        }\n        if (!scope) {\n            this._logger.error(\"ctor: No scope passed\");\n            throw new Error(\"scope\");\n        }\n        if (!authority) {\n            this._logger.error(\"ctor: No authority passed\");\n            throw new Error(\"authority\");\n        }\n\n        this.state = new SigninState({\n            data: state_data,\n            request_type,\n            code_verifier: !disablePKCE,\n            client_id, authority, redirect_uri,\n            response_mode,\n            client_secret, scope, extraTokenParams,\n            skipUserInfo,\n        });\n\n        const parsedUrl = new URL(url);\n        parsedUrl.searchParams.append(\"client_id\", client_id);\n        parsedUrl.searchParams.append(\"redirect_uri\", redirect_uri);\n        parsedUrl.searchParams.append(\"response_type\", response_type);\n        parsedUrl.searchParams.append(\"scope\", scope);\n        if (nonce) {\n            parsedUrl.searchParams.append(\"nonce\", nonce);\n        }\n\n        parsedUrl.searchParams.append(\"state\", this.state.id);\n        if (this.state.code_challenge) {\n            parsedUrl.searchParams.append(\"code_challenge\", this.state.code_challenge);\n            parsedUrl.searchParams.append(\"code_challenge_method\", \"S256\");\n        }\n\n        if (resource) {\n            // https://datatracker.ietf.org/doc/html/rfc8707\n            const resources = Array.isArray(resource) ? resource : [resource];\n            resources\n                .forEach(r => parsedUrl.searchParams.append(\"resource\", r));\n        }\n\n        for (const [key, value] of Object.entries({ response_mode, ...optionalParams, ...extraQueryParams })) {\n            if (value != null) {\n                parsedUrl.searchParams.append(key, value.toString());\n            }\n        }\n\n        this.url = parsedUrl.href;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport { State } from \"./State\";\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-rpinitiated-1_0.html#RPLogout\n */\nexport interface SignoutRequestArgs {\n    // mandatory\n    url: string;\n\n    // optional\n    id_token_hint?: string;\n    client_id?: string;\n    post_logout_redirect_uri?: string;\n    extraQueryParams?: Record<string, string | number | boolean>;\n\n    // special\n    request_type?: string;\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    state_data?: unknown;\n}\n\n/**\n * @public\n */\nexport class SignoutRequest {\n    private readonly _logger = new Logger(\"SignoutRequest\");\n\n    public readonly url: string;\n    public readonly state?: State;\n\n    public constructor({\n        url,\n        state_data, id_token_hint, post_logout_redirect_uri, extraQueryParams, request_type, client_id,\n    }: SignoutRequestArgs) {\n        if (!url) {\n            this._logger.error(\"ctor: No url passed\");\n            throw new Error(\"url\");\n        }\n\n        const parsedUrl = new URL(url);\n        if (id_token_hint) {\n            parsedUrl.searchParams.append(\"id_token_hint\", id_token_hint);\n        }\n        if (client_id) {\n            parsedUrl.searchParams.append(\"client_id\", client_id);\n        }\n\n        if (post_logout_redirect_uri) {\n            parsedUrl.searchParams.append(\"post_logout_redirect_uri\", post_logout_redirect_uri);\n\n            if (state_data) {\n                this.state = new State({ data: state_data, request_type });\n\n                parsedUrl.searchParams.append(\"state\", this.state.id);\n            }\n        }\n\n        for (const [key, value] of Object.entries({ ...extraQueryParams })) {\n            if (value != null) {\n                parsedUrl.searchParams.append(key, value.toString());\n            }\n        }\n\n        this.url = parsedUrl.href;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport { CheckSessionIFrame } from \"./CheckSessionIFrame\";\nimport type { UserManager } from \"./UserManager\";\nimport type { User } from \"./User\";\n\n/**\n * @public\n */\nexport class SessionMonitor {\n    private readonly _logger = new Logger(\"SessionMonitor\");\n\n    private _sub: string | undefined;\n    private _sid: string | undefined;\n    private _checkSessionIFrame?: CheckSessionIFrame;\n\n    public constructor(private readonly _userManager: UserManager) {\n        if (!_userManager) {\n            this._logger.throw(new Error(\"No user manager passed\"));\n        }\n\n        this._userManager.events.addUserLoaded(this._start);\n        this._userManager.events.addUserUnloaded(this._stop);\n\n        this._init().catch((err: unknown) => {\n            // catch to suppress errors since we're in a ctor\n            this._logger.error(err);\n        });\n    }\n\n    protected async _init(): Promise<void> {\n        this._logger.create(\"_init\");\n        const user = await this._userManager.getUser();\n        // doing this manually here since calling getUser\n        // doesn't trigger load event.\n        if (user) {\n            void this._start(user);\n        }\n        else if (this._userManager.settings.monitorAnonymousSession) {\n            const session = await this._userManager.querySessionStatus();\n            if (session) {\n                const tmpUser = {\n                    session_state: session.session_state,\n                    profile: session.sub && session.sid ? {\n                        sub: session.sub,\n                        sid: session.sid,\n                    } : null,\n                };\n                void this._start(tmpUser);\n            }\n        }\n    }\n\n    protected _start = async (\n        user: User | {\n            session_state: string;\n            profile: { sub: string; sid: string } | null;\n        },\n    ): Promise<void> => {\n        const session_state = user.session_state;\n        if (!session_state) {\n            return;\n        }\n        const logger = this._logger.create(\"_start\");\n\n        if (user.profile) {\n            this._sub = user.profile.sub;\n            this._sid = user.profile.sid;\n            logger.debug(\"session_state\", session_state, \", sub\", this._sub);\n        }\n        else {\n            this._sub = undefined;\n            this._sid = undefined;\n            logger.debug(\"session_state\", session_state, \", anonymous user\");\n        }\n\n        if (this._checkSessionIFrame) {\n            this._checkSessionIFrame.start(session_state);\n            return;\n        }\n\n        try {\n            const url = await this._userManager.metadataService.getCheckSessionIframe();\n            if (url) {\n                logger.debug(\"initializing check session iframe\");\n\n                const client_id = this._userManager.settings.client_id;\n                const intervalInSeconds = this._userManager.settings.checkSessionIntervalInSeconds;\n                const stopOnError = this._userManager.settings.stopCheckSessionOnError;\n\n                const checkSessionIFrame = new CheckSessionIFrame(this._callback, client_id, url, intervalInSeconds, stopOnError);\n                await checkSessionIFrame.load();\n                this._checkSessionIFrame = checkSessionIFrame;\n                checkSessionIFrame.start(session_state);\n            }\n            else {\n                logger.warn(\"no check session iframe found in the metadata\");\n            }\n        }\n        catch (err) {\n            // catch to suppress errors since we're in non-promise callback\n            logger.error(\"Error from getCheckSessionIframe:\", err instanceof Error ? err.message : err);\n        }\n    };\n\n    protected _stop = (): void => {\n        const logger = this._logger.create(\"_stop\");\n        this._sub = undefined;\n        this._sid = undefined;\n\n        if (this._checkSessionIFrame) {\n            this._checkSessionIFrame.stop();\n        }\n\n        if (this._userManager.settings.monitorAnonymousSession) {\n            // using a timer to delay re-initialization to avoid race conditions during signout\n            // TODO rewrite to use promise correctly\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            const timerHandle = setInterval(async () => {\n                clearInterval(timerHandle);\n\n                try {\n                    const session = await this._userManager.querySessionStatus();\n                    if (session) {\n                        const tmpUser = {\n                            session_state: session.session_state,\n                            profile: session.sub && session.sid ? {\n                                sub: session.sub,\n                                sid: session.sid,\n                            } : null,\n                        };\n                        void this._start(tmpUser);\n                    }\n                }\n                catch (err) {\n                    // catch to suppress errors since we're in a callback\n                    logger.error(\"error from querySessionStatus\", err instanceof Error ? err.message : err);\n                }\n            }, 1000);\n        }\n    };\n\n    protected _callback = async (): Promise<void> => {\n        const logger = this._logger.create(\"_callback\");\n        try {\n            const session = await this._userManager.querySessionStatus();\n            let raiseEvent = true;\n\n            if (session && this._checkSessionIFrame) {\n                if (session.sub === this._sub) {\n                    raiseEvent = false;\n                    this._checkSessionIFrame.start(session.session_state);\n\n                    if (session.sid === this._sid) {\n                        logger.debug(\"same sub still logged in at OP, restarting check session iframe; session_state\", session.session_state);\n                    }\n                    else {\n                        logger.debug(\"same sub still logged in at OP, session state has changed, restarting check session iframe; session_state\", session.session_state);\n                        this._userManager.events._raiseUserSessionChanged();\n                    }\n                }\n                else {\n                    logger.debug(\"different subject signed into OP\", session.sub);\n                }\n            }\n            else {\n                logger.debug(\"subject no longer signed into OP\");\n            }\n\n            if (raiseEvent) {\n                if (this._sub) {\n                    this._userManager.events._raiseUserSignedOut();\n                }\n                else {\n                    this._userManager.events._raiseUserSignedIn();\n                }\n            } else {\n                logger.debug(\"no change in session detected, no event to raise\");\n            }\n        }\n        catch (err) {\n            if (this._sub) {\n                logger.debug(\"Error calling queryCurrentSigninSession; raising signed out event\", err);\n                this._userManager.events._raiseUserSignedOut();\n            }\n        }\n    };\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, Timer } from \"./utils\";\nimport type { IdTokenClaims } from \"./Claims\";\n\n/**\n * Holds claims represented by a combination of the `id_token` and the user info endpoint.\n * @public\n */\nexport type UserProfile = IdTokenClaims;\n\n/**\n * @public\n */\nexport class User {\n    /**\n     * A JSON Web Token (JWT). Only provided if `openid` scope was requested.\n     * The application can access the data decoded by using the `profile` property.\n     */\n    public id_token?: string;\n\n    /** The session state value returned from the OIDC provider. */\n    public session_state: string | null;\n\n    /**\n     * The requested access token returned from the OIDC provider. The application can use this token to\n     * authenticate itself to the secured resource.\n     */\n    public access_token: string;\n\n    /**\n     * An OAuth 2.0 refresh token. The app can use this token to acquire additional access tokens after the\n     * current access token expires. Refresh tokens are long-lived and can be used to maintain access to resources\n     * for extended periods of time.\n     */\n    public refresh_token?: string;\n\n    /** Typically \"Bearer\" */\n    public token_type: string;\n\n    /** The scopes that the requested access token is valid for. */\n    public scope?: string;\n\n    /** The claims represented by a combination of the `id_token` and the user info endpoint. */\n    public profile: UserProfile;\n\n    /** The expires at returned from the OIDC provider. */\n    public expires_at?: number;\n\n    /** custom state data set during the initial signin request */\n    public readonly state: unknown;\n\n    public constructor(args: {\n        id_token?: string;\n        session_state?: string | null;\n        access_token: string;\n        refresh_token?: string;\n        token_type: string;\n        scope?: string;\n        profile: UserProfile;\n        expires_at?: number;\n        userState?: unknown;\n    }) {\n        this.id_token = args.id_token;\n        this.session_state = args.session_state ?? null;\n        this.access_token = args.access_token;\n        this.refresh_token = args.refresh_token;\n\n        this.token_type = args.token_type;\n        this.scope = args.scope;\n        this.profile = args.profile;\n        this.expires_at = args.expires_at;\n        this.state = args.userState;\n    }\n\n    /** Computed number of seconds the access token has remaining. */\n    public get expires_in(): number | undefined {\n        if (this.expires_at === undefined) {\n            return undefined;\n        }\n        return this.expires_at - Timer.getEpochTime();\n    }\n\n    public set expires_in(value: number | undefined) {\n        if (value !== undefined) {\n            this.expires_at = Math.floor(value) + Timer.getEpochTime();\n        }\n    }\n\n    /** Computed value indicating if the access token is expired. */\n    public get expired(): boolean | undefined {\n        const expires_in = this.expires_in;\n        if (expires_in === undefined) {\n            return undefined;\n        }\n        return expires_in <= 0;\n    }\n\n    /** Array representing the parsed values from the `scope`. */\n    public get scopes(): string[] {\n        return this.scope?.split(\" \") ?? [];\n    }\n\n    public toStorageString(): string {\n        new Logger(\"User\").create(\"toStorageString\");\n        return JSON.stringify({\n            id_token: this.id_token,\n            session_state: this.session_state,\n            access_token: this.access_token,\n            refresh_token: this.refresh_token,\n            token_type: this.token_type,\n            scope: this.scope,\n            profile: this.profile,\n            expires_at: this.expires_at,\n        });\n    }\n\n    public static fromStorageString(storageString: string): User {\n        Logger.createStatic(\"User\", \"fromStorageString\");\n        return new User(JSON.parse(storageString));\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Event, Logger, UrlUtils } from \"../utils\";\nimport type { IWindow, NavigateParams, NavigateResponse } from \"./IWindow\";\n\nconst messageSource = \"oidc-client\";\n\ninterface MessageData {\n    source: string;\n    url: string;\n    keepOpen: boolean;\n}\n\n/**\n * Window implementation which resolves via communication from a child window\n * via the `Window.postMessage()` interface.\n *\n * @internal\n */\nexport abstract class AbstractChildWindow implements IWindow {\n    protected abstract readonly _logger: Logger;\n    protected readonly _abort = new Event<[reason: Error]>(\"Window navigation aborted\");\n    protected readonly _disposeHandlers = new Set<() => void>();\n\n    protected _window: WindowProxy | null = null;\n\n    public async navigate(params: NavigateParams): Promise<NavigateResponse> {\n        const logger = this._logger.create(\"navigate\");\n        if (!this._window) {\n            throw new Error(\"Attempted to navigate on a disposed window\");\n        }\n\n        logger.debug(\"setting URL in window\");\n        this._window.location.replace(params.url);\n\n        const { url, keepOpen } = await new Promise<MessageData>((resolve, reject) => {\n            const listener = (e: MessageEvent) => {\n                const data: MessageData | undefined = e.data;\n                const origin = params.scriptOrigin ?? window.location.origin;\n                if (e.origin !== origin || data?.source !== messageSource) {\n                    // silently discard events not intended for us\n                    return;\n                }\n                try {\n                    const state = UrlUtils.readParams(data.url, params.response_mode).get(\"state\");\n                    if (!state) {\n                        logger.warn(\"no state found in response url\");\n                    }\n                    if (e.source !== this._window && state !== params.state) {\n                        // MessageEvent source is a relatively modern feature, we can't rely on it\n                        // so we also inspect the payload for a matching state key as an alternative\n                        return;\n                    }\n                }\n                catch (err) {\n                    this._dispose();\n                    reject(new Error(\"Invalid response from window\"));\n                }\n                resolve(data);\n            };\n            window.addEventListener(\"message\", listener, false);\n            this._disposeHandlers.add(() => window.removeEventListener(\"message\", listener, false));\n            this._disposeHandlers.add(this._abort.addHandler((reason) => {\n                this._dispose();\n                reject(reason);\n            }));\n        });\n        logger.debug(\"got response from window\");\n        this._dispose();\n\n        if (!keepOpen) {\n            this.close();\n        }\n\n        return { url };\n    }\n\n    public abstract close(): void;\n\n    private _dispose(): void {\n        this._logger.create(\"_dispose\");\n\n        for (const dispose of this._disposeHandlers) {\n            dispose();\n        }\n        this._disposeHandlers.clear();\n    }\n\n    protected static _notifyParent(parent: Window, url: string, keepOpen = false, targetOrigin = window.location.origin): void {\n        parent.postMessage({\n            source: messageSource,\n            url,\n            keepOpen,\n        } as MessageData, targetOrigin);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { type OidcClientSettings, OidcClientSettingsStore } from \"./OidcClientSettings\";\nimport type { PopupWindowFeatures } from \"./utils/PopupUtils\";\nimport { WebStorageStateStore } from \"./WebStorageStateStore\";\nimport { InMemoryWebStorage } from \"./InMemoryWebStorage\";\n\nexport const DefaultPopupWindowFeatures: PopupWindowFeatures = {\n    location: false,\n    toolbar: false,\n    height: 640,\n    closePopupWindowAfterInSeconds: -1,\n};\nexport const DefaultPopupTarget = \"_blank\";\nconst DefaultAccessTokenExpiringNotificationTimeInSeconds = 60;\nconst DefaultCheckSessionIntervalInSeconds = 2;\nexport const DefaultSilentRequestTimeoutInSeconds = 10;\n\n/**\n * The settings used to configure the {@link UserManager}.\n *\n * @public\n */\nexport interface UserManagerSettings extends OidcClientSettings {\n    /** The URL for the page containing the call to signinPopupCallback to handle the callback from the OIDC/OAuth2 */\n    popup_redirect_uri?: string;\n    popup_post_logout_redirect_uri?: string;\n    /**\n     * The features parameter to window.open for the popup signin window. By default, the popup is\n     * placed centered in front of the window opener.\n     * (default: \\{ location: false, menubar: false, height: 640, closePopupWindowAfterInSeconds: -1 \\})\n     */\n    popupWindowFeatures?: PopupWindowFeatures;\n    /** The target parameter to window.open for the popup signin window (default: \"_blank\") */\n    popupWindowTarget?: string;\n    /** The methods window.location method used to redirect (default: \"assign\") */\n    redirectMethod?: \"replace\" | \"assign\";\n    /** The methods target window being redirected (default: \"self\") */\n    redirectTarget?: \"top\" | \"self\";\n\n    /** The target to pass while calling postMessage inside iframe for callback (default: window.location.origin) */\n    iframeNotifyParentOrigin?: string;\n\n    /** The script origin to check during 'message' callback execution while performing silent auth via iframe (default: window.location.origin) */\n    iframeScriptOrigin?: string;\n\n    /** The URL for the page containing the code handling the silent renew */\n    silent_redirect_uri?: string;\n    /** Number of seconds to wait for the silent renew to return before assuming it has failed or timed out (default: 10) */\n    silentRequestTimeoutInSeconds?: number;\n    /** Flag to indicate if there should be an automatic attempt to renew the access token prior to its expiration. The automatic renew attempt starts 1 minute before the access token expires (default: true) */\n    automaticSilentRenew?: boolean;\n    /** Flag to validate user.profile.sub in silent renew calls (default: true) */\n    validateSubOnSilentRenew?: boolean;\n    /** Flag to control if id_token is included as id_token_hint in silent renew calls (default: false) */\n    includeIdTokenInSilentRenew?: boolean;\n\n    /** Will raise events for when user has performed a signout at the OP (default: false) */\n    monitorSession?: boolean;\n    monitorAnonymousSession?: boolean;\n    /** Interval in seconds to check the user's session (default: 2) */\n    checkSessionIntervalInSeconds?: number;\n    query_status_response_type?: string;\n    stopCheckSessionOnError?: boolean;\n\n    /**\n     * The `token_type_hint`s to pass to the authority server by default (default: [\"access_token\", \"refresh_token\"])\n     *\n     * Token types will be revoked in the same order as they are given here.\n     */\n    revokeTokenTypes?: (\"access_token\" | \"refresh_token\")[];\n    /** Will invoke the revocation endpoint on signout if there is an access token for the user (default: false) */\n    revokeTokensOnSignout?: boolean;\n    /** Flag to control if id_token is included as id_token_hint in silent signout calls (default: false) */\n    includeIdTokenInSilentSignout?: boolean;\n\n    /** The number of seconds before an access token is to expire to raise the accessTokenExpiring event (default: 60) */\n    accessTokenExpiringNotificationTimeInSeconds?: number;\n\n    /**\n     * Storage object used to persist User for currently authenticated user (default: window.sessionStorage, InMemoryWebStorage iff no window).\n     *  E.g. `userStore: new WebStorageStateStore({ store: window.localStorage })`\n     */\n    userStore?: WebStorageStateStore;\n}\n\n/**\n * The settings with defaults applied of the {@link UserManager}.\n * @see {@link UserManagerSettings}\n *\n * @public\n */\nexport class UserManagerSettingsStore extends OidcClientSettingsStore {\n    public readonly popup_redirect_uri: string;\n    public readonly popup_post_logout_redirect_uri: string | undefined;\n    public readonly popupWindowFeatures: PopupWindowFeatures;\n    public readonly popupWindowTarget: string;\n    public readonly redirectMethod: \"replace\" | \"assign\";\n    public readonly redirectTarget: \"top\" | \"self\";\n\n    public readonly iframeNotifyParentOrigin: string | undefined;\n    public readonly iframeScriptOrigin: string | undefined;\n\n    public readonly silent_redirect_uri: string;\n    public readonly silentRequestTimeoutInSeconds: number;\n    public readonly automaticSilentRenew: boolean;\n    public readonly validateSubOnSilentRenew: boolean;\n    public readonly includeIdTokenInSilentRenew: boolean;\n\n    public readonly monitorSession: boolean;\n    public readonly monitorAnonymousSession: boolean;\n    public readonly checkSessionIntervalInSeconds: number;\n    public readonly query_status_response_type: string;\n    public readonly stopCheckSessionOnError: boolean;\n\n    public readonly revokeTokenTypes: (\"access_token\" | \"refresh_token\")[];\n    public readonly revokeTokensOnSignout: boolean;\n    public readonly includeIdTokenInSilentSignout: boolean;\n\n    public readonly accessTokenExpiringNotificationTimeInSeconds: number;\n\n    public readonly userStore: WebStorageStateStore;\n\n    public constructor(args: UserManagerSettings) {\n        const {\n            popup_redirect_uri = args.redirect_uri,\n            popup_post_logout_redirect_uri = args.post_logout_redirect_uri,\n            popupWindowFeatures = DefaultPopupWindowFeatures,\n            popupWindowTarget = DefaultPopupTarget,\n            redirectMethod = \"assign\",\n            redirectTarget = \"self\",\n\n            iframeNotifyParentOrigin = args.iframeNotifyParentOrigin,\n            iframeScriptOrigin = args.iframeScriptOrigin,\n\n            silent_redirect_uri = args.redirect_uri,\n            silentRequestTimeoutInSeconds = DefaultSilentRequestTimeoutInSeconds,\n            automaticSilentRenew = true,\n            validateSubOnSilentRenew = true,\n            includeIdTokenInSilentRenew = false,\n\n            monitorSession = false,\n            monitorAnonymousSession = false,\n            checkSessionIntervalInSeconds = DefaultCheckSessionIntervalInSeconds,\n            query_status_response_type = \"code\",\n            stopCheckSessionOnError = true,\n\n            revokeTokenTypes = [\"access_token\", \"refresh_token\"],\n            revokeTokensOnSignout = false,\n            includeIdTokenInSilentSignout = false,\n\n            accessTokenExpiringNotificationTimeInSeconds = DefaultAccessTokenExpiringNotificationTimeInSeconds,\n\n            userStore,\n        } = args;\n\n        super(args);\n\n        this.popup_redirect_uri = popup_redirect_uri;\n        this.popup_post_logout_redirect_uri = popup_post_logout_redirect_uri;\n        this.popupWindowFeatures = popupWindowFeatures;\n        this.popupWindowTarget = popupWindowTarget;\n        this.redirectMethod = redirectMethod;\n        this.redirectTarget = redirectTarget;\n\n        this.iframeNotifyParentOrigin = iframeNotifyParentOrigin;\n        this.iframeScriptOrigin = iframeScriptOrigin;\n\n        this.silent_redirect_uri = silent_redirect_uri;\n        this.silentRequestTimeoutInSeconds = silentRequestTimeoutInSeconds;\n        this.automaticSilentRenew = automaticSilentRenew;\n        this.validateSubOnSilentRenew = validateSubOnSilentRenew;\n        this.includeIdTokenInSilentRenew = includeIdTokenInSilentRenew;\n\n        this.monitorSession = monitorSession;\n        this.monitorAnonymousSession = monitorAnonymousSession;\n        this.checkSessionIntervalInSeconds = checkSessionIntervalInSeconds;\n        this.stopCheckSessionOnError = stopCheckSessionOnError;\n        this.query_status_response_type = query_status_response_type;\n\n        this.revokeTokenTypes = revokeTokenTypes;\n        this.revokeTokensOnSignout = revokeTokensOnSignout;\n        this.includeIdTokenInSilentSignout = includeIdTokenInSilentSignout;\n\n        this.accessTokenExpiringNotificationTimeInSeconds = accessTokenExpiringNotificationTimeInSeconds;\n\n        if (userStore) {\n            this.userStore = userStore;\n        }\n        else {\n            const store = typeof window !== \"undefined\" ? window.sessionStorage : new InMemoryWebStorage();\n            this.userStore = new WebStorageStateStore({ store });\n        }\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\nimport { ErrorTimeout } from \"../errors\";\nimport type { NavigateParams, NavigateResponse } from \"./IWindow\";\nimport { AbstractChildWindow } from \"./AbstractChildWindow\";\nimport { DefaultSilentRequestTimeoutInSeconds } from \"../UserManagerSettings\";\n\n/**\n * @public\n */\nexport interface IFrameWindowParams {\n    silentRequestTimeoutInSeconds?: number;\n}\n\n/**\n * @internal\n */\nexport class IFrameWindow extends AbstractChildWindow {\n    protected readonly _logger = new Logger(\"IFrameWindow\");\n    private _frame: HTMLIFrameElement | null;\n    private _timeoutInSeconds: number;\n\n    public constructor({\n        silentRequestTimeoutInSeconds = DefaultSilentRequestTimeoutInSeconds,\n    }: IFrameWindowParams) {\n        super();\n        this._timeoutInSeconds = silentRequestTimeoutInSeconds;\n\n        this._frame = IFrameWindow.createHiddenIframe();\n        this._window = this._frame.contentWindow;\n    }\n\n    private static createHiddenIframe(): HTMLIFrameElement {\n        const iframe = window.document.createElement(\"iframe\");\n\n        // shotgun approach\n        iframe.style.visibility = \"hidden\";\n        iframe.style.position = \"fixed\";\n        iframe.style.left = \"-1000px\";\n        iframe.style.top = \"0\";\n        iframe.width = \"0\";\n        iframe.height = \"0\";\n\n        window.document.body.appendChild(iframe);\n        return iframe;\n    }\n\n    public async navigate(params: NavigateParams): Promise<NavigateResponse> {\n        this._logger.debug(\"navigate: Using timeout of:\", this._timeoutInSeconds);\n        const timer = setTimeout(() => this._abort.raise(new ErrorTimeout(\"IFrame timed out without a response\")), this._timeoutInSeconds * 1000);\n        this._disposeHandlers.add(() => clearTimeout(timer));\n\n        return await super.navigate(params);\n    }\n\n    public close(): void {\n        if (this._frame) {\n            if (this._frame.parentNode) {\n                this._frame.addEventListener(\"load\", (ev) => {\n                    const frame = ev.target as HTMLIFrameElement;\n                    frame.parentNode?.removeChild(frame);\n                    this._abort.raise(new Error(\"IFrame removed from DOM\"));\n                }, true);\n                this._frame.contentWindow?.location.replace(\"about:blank\");\n            }\n            this._frame = null;\n        }\n        this._window = null;\n    }\n\n    public static notifyParent(url: string, targetOrigin?: string): void {\n        return super._notifyParent(window.parent, url, false, targetOrigin);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, PopupUtils, type PopupWindowFeatures } from \"../utils\";\nimport { DefaultPopupWindowFeatures, DefaultPopupTarget } from \"../UserManagerSettings\";\nimport { AbstractChildWindow } from \"./AbstractChildWindow\";\nimport type { NavigateParams, NavigateResponse } from \"./IWindow\";\n\nconst checkForPopupClosedInterval = 500;\nconst second = 1000;\n\n/**\n * @public\n */\nexport interface PopupWindowParams {\n    popupWindowFeatures?: PopupWindowFeatures;\n    popupWindowTarget?: string;\n}\n\n/**\n * @internal\n */\nexport class PopupWindow extends AbstractChildWindow {\n    protected readonly _logger = new Logger(\"PopupWindow\");\n\n    protected _window: WindowProxy | null;\n\n    public constructor({\n        popupWindowTarget = DefaultPopupTarget,\n        popupWindowFeatures = {},\n    }: PopupWindowParams) {\n        super();\n        const centeredPopup = PopupUtils.center({ ...DefaultPopupWindowFeatures, ...popupWindowFeatures });\n        this._window = window.open(undefined, popupWindowTarget, PopupUtils.serialize(centeredPopup));\n        if (popupWindowFeatures.closePopupWindowAfterInSeconds && popupWindowFeatures.closePopupWindowAfterInSeconds > 0) {\n            setTimeout(() => {\n                if (!this._window || typeof this._window.closed !== \"boolean\" || this._window.closed) {\n                    this._abort.raise(new Error(\"Popup blocked by user\"));\n                    return;\n                }\n\n                this.close();\n            }, popupWindowFeatures.closePopupWindowAfterInSeconds * second);\n        }\n    }\n\n    public async navigate(params: NavigateParams): Promise<NavigateResponse> {\n        this._window?.focus();\n\n        const popupClosedInterval = setInterval(() => {\n            if (!this._window || this._window.closed) {\n                this._abort.raise(new Error(\"Popup closed by user\"));\n            }\n        }, checkForPopupClosedInterval);\n        this._disposeHandlers.add(() => clearInterval(popupClosedInterval));\n\n        return await super.navigate(params);\n    }\n\n    public close(): void {\n        if (this._window) {\n            if (!this._window.closed) {\n                this._window.close();\n                this._abort.raise(new Error(\"Popup closed\"));\n            }\n        }\n        this._window = null;\n    }\n\n    public static notifyOpener(url: string, keepOpen: boolean): void {\n        if (!window.opener) {\n            throw new Error(\"No window.opener. Can't complete notification.\");\n        }\n        return super._notifyParent(window.opener, url, keepOpen);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, Event } from \"./utils\";\nimport { AccessTokenEvents } from \"./AccessTokenEvents\";\nimport type { UserManagerSettingsStore } from \"./UserManagerSettings\";\nimport type { User } from \"./User\";\n\n/**\n * @public\n */\nexport type UserLoadedCallback = (user: User) => Promise<void> | void;\n/**\n * @public\n */\nexport type UserUnloadedCallback = () => Promise<void> | void;\n/**\n * @public\n */\nexport type SilentRenewErrorCallback = (error: Error) => Promise<void> | void;\n/**\n * @public\n */\nexport type UserSignedInCallback = () => Promise<void> | void;\n/**\n * @public\n */\nexport type UserSignedOutCallback = () => Promise<void> | void;\n/**\n * @public\n */\nexport type UserSessionChangedCallback = () => Promise<void> | void;\n\n/**\n * @public\n */\nexport class UserManagerEvents extends AccessTokenEvents {\n    protected readonly _logger = new Logger(\"UserManagerEvents\");\n\n    private readonly _userLoaded = new Event<[User]>(\"User loaded\");\n    private readonly _userUnloaded = new Event<[]>(\"User unloaded\");\n    private readonly _silentRenewError = new Event<[Error]>(\"Silent renew error\");\n    private readonly _userSignedIn = new Event<[]>(\"User signed in\");\n    private readonly _userSignedOut = new Event<[]>(\"User signed out\");\n    private readonly _userSessionChanged = new Event<[]>(\"User session changed\");\n\n    public constructor(settings: UserManagerSettingsStore) {\n        super({ expiringNotificationTimeInSeconds: settings.accessTokenExpiringNotificationTimeInSeconds });\n    }\n\n    public load(user: User, raiseEvent=true): void {\n        super.load(user);\n        if (raiseEvent) {\n            this._userLoaded.raise(user);\n        }\n    }\n    public unload(): void {\n        super.unload();\n        this._userUnloaded.raise();\n    }\n\n    /**\n     * Add callback: Raised when a user session has been established (or re-established).\n     */\n    public addUserLoaded(cb: UserLoadedCallback): () => void {\n        return this._userLoaded.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when a user session has been established (or re-established).\n     */\n    public removeUserLoaded(cb: UserLoadedCallback): void {\n        return this._userLoaded.removeHandler(cb);\n    }\n\n    /**\n     * Add callback: Raised when a user session has been terminated.\n     */\n    public addUserUnloaded(cb: UserUnloadedCallback): () => void {\n        return this._userUnloaded.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when a user session has been terminated.\n     */\n    public removeUserUnloaded(cb: UserUnloadedCallback): void {\n        return this._userUnloaded.removeHandler(cb);\n    }\n\n    /**\n     * Add callback: Raised when the automatic silent renew has failed.\n     */\n    public addSilentRenewError(cb: SilentRenewErrorCallback): () => void {\n        return this._silentRenewError.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when the automatic silent renew has failed.\n     */\n    public removeSilentRenewError(cb: SilentRenewErrorCallback): void {\n        return this._silentRenewError.removeHandler(cb);\n    }\n    /**\n     * @internal\n     */\n    public _raiseSilentRenewError(e: Error): void {\n        this._silentRenewError.raise(e);\n    }\n\n    /**\n     * Add callback: Raised when the user is signed in (when `monitorSession` is set).\n     * @see {@link UserManagerSettings.monitorSession}\n     */\n    public addUserSignedIn(cb: UserSignedInCallback): () => void {\n        return this._userSignedIn.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when the user is signed in (when `monitorSession` is set).\n     */\n    public removeUserSignedIn(cb: UserSignedInCallback): void {\n        this._userSignedIn.removeHandler(cb);\n    }\n    /**\n     * @internal\n     */\n    public _raiseUserSignedIn(): void {\n        this._userSignedIn.raise();\n    }\n\n    /**\n     * Add callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n     * @see {@link UserManagerSettings.monitorSession}\n     */\n    public addUserSignedOut(cb: UserSignedOutCallback): () => void {\n        return this._userSignedOut.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n     */\n    public removeUserSignedOut(cb: UserSignedOutCallback): void {\n        this._userSignedOut.removeHandler(cb);\n    }\n    /**\n     * @internal\n     */\n    public _raiseUserSignedOut(): void {\n        this._userSignedOut.raise();\n    }\n\n    /**\n     * Add callback: Raised when the user session changed (when `monitorSession` is set).\n     * @see {@link UserManagerSettings.monitorSession}\n     */\n    public addUserSessionChanged(cb: UserSessionChangedCallback): () => void {\n        return this._userSessionChanged.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when the user session changed (when `monitorSession` is set).\n     */\n    public removeUserSessionChanged(cb: UserSessionChangedCallback): void {\n        this._userSessionChanged.removeHandler(cb);\n    }\n    /**\n     * @internal\n     */\n    public _raiseUserSessionChanged(): void {\n        this._userSessionChanged.raise();\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport { ErrorResponse } from \"./errors\";\nimport { type NavigateResponse, type PopupWindowParams, type IWindow, type IFrameWindowParams, type RedirectParams, RedirectNavigator, PopupNavigator, IFrameNavigator, type INavigator } from \"./navigators\";\nimport { OidcClient, type CreateSigninRequestArgs, type CreateSignoutRequestArgs, type ProcessResourceOwnerPasswordCredentialsArgs } from \"./OidcClient\";\nimport { type UserManagerSettings, UserManagerSettingsStore } from \"./UserManagerSettings\";\nimport { User } from \"./User\";\nimport { UserManagerEvents } from \"./UserManagerEvents\";\nimport { SilentRenewService } from \"./SilentRenewService\";\nimport { SessionMonitor } from \"./SessionMonitor\";\nimport type { SessionStatus } from \"./SessionStatus\";\nimport type { SignoutResponse } from \"./SignoutResponse\";\nimport type { MetadataService } from \"./MetadataService\";\nimport { RefreshState } from \"./RefreshState\";\nimport type { SigninResponse } from \"./SigninResponse\";\n\n/**\n * @public\n */\nexport type ExtraSigninRequestArgs = Pick<CreateSigninRequestArgs, \"nonce\" | \"extraQueryParams\" | \"extraTokenParams\" | \"state\" | \"redirect_uri\" | \"prompt\" | \"acr_values\" | \"login_hint\" | \"scope\" | \"max_age\" | \"ui_locales\" | \"resource\">;\n/**\n * @public\n */\nexport type ExtraSignoutRequestArgs = Pick<CreateSignoutRequestArgs, \"extraQueryParams\" | \"state\" | \"id_token_hint\" | \"post_logout_redirect_uri\">;\n\n/**\n * @public\n */\nexport type RevokeTokensTypes = UserManagerSettings[\"revokeTokenTypes\"];\n\n/**\n * @public\n */\nexport type SigninRedirectArgs = RedirectParams & ExtraSigninRequestArgs;\n\n/**\n * @public\n */\nexport type SigninPopupArgs = PopupWindowParams & ExtraSigninRequestArgs;\n\n/**\n * @public\n */\nexport type SigninSilentArgs = IFrameWindowParams & ExtraSigninRequestArgs;\n\n/**\n * @public\n */\nexport type SigninResourceOwnerCredentialsArgs = ProcessResourceOwnerPasswordCredentialsArgs;\n\n/**\n * @public\n */\nexport type QuerySessionStatusArgs = IFrameWindowParams & ExtraSigninRequestArgs;\n\n/**\n * @public\n */\nexport type SignoutRedirectArgs = RedirectParams & ExtraSignoutRequestArgs;\n\n/**\n * @public\n */\nexport type SignoutPopupArgs = PopupWindowParams & ExtraSignoutRequestArgs;\n\n/**\n * @public\n */\nexport type SignoutSilentArgs = IFrameWindowParams & ExtraSignoutRequestArgs;\n\n/**\n * Provides a higher level API for signing a user in, signing out, managing the user's claims returned from the OIDC provider,\n * and managing an access token returned from the OIDC/OAuth2 provider.\n *\n * @public\n */\nexport class UserManager {\n    /** Returns the settings used to configure the `UserManager`. */\n    public readonly settings: UserManagerSettingsStore;\n    protected readonly _logger = new Logger(\"UserManager\");\n\n    protected readonly _client: OidcClient;\n    protected readonly _redirectNavigator: INavigator;\n    protected readonly _popupNavigator: INavigator;\n    protected readonly _iframeNavigator: INavigator;\n    protected readonly _events: UserManagerEvents;\n    protected readonly _silentRenewService: SilentRenewService;\n    protected readonly _sessionMonitor: SessionMonitor | null;\n\n    public constructor(settings: UserManagerSettings, redirectNavigator?: INavigator, popupNavigator?: INavigator, iframeNavigator?: INavigator) {\n        this.settings = new UserManagerSettingsStore(settings);\n\n        this._client = new OidcClient(settings);\n\n        this._redirectNavigator = redirectNavigator ?? new RedirectNavigator(this.settings);\n        this._popupNavigator = popupNavigator ?? new PopupNavigator(this.settings);\n        this._iframeNavigator = iframeNavigator ?? new IFrameNavigator(this.settings);\n\n        this._events = new UserManagerEvents(this.settings);\n        this._silentRenewService = new SilentRenewService(this);\n\n        // order is important for the following properties; these services depend upon the events.\n        if (this.settings.automaticSilentRenew) {\n            this.startSilentRenew();\n        }\n\n        this._sessionMonitor = null;\n        if (this.settings.monitorSession) {\n            this._sessionMonitor = new SessionMonitor(this);\n        }\n\n    }\n\n    /** Returns an object used to register for events raised by the `UserManager`. */\n    public get events(): UserManagerEvents {\n        return this._events;\n    }\n\n    /** Returns an object used to access the metadata configuration of the OIDC provider. */\n    public get metadataService(): MetadataService {\n        return this._client.metadataService;\n    }\n\n    /**\n     * Returns promise to load the `User` object for the currently authenticated user.\n     */\n    public async getUser(): Promise<User | null> {\n        const logger = this._logger.create(\"getUser\");\n        const user = await this._loadUser();\n        if (user) {\n            logger.info(\"user loaded\");\n            this._events.load(user, false);\n            return user;\n        }\n\n        logger.info(\"user not found in storage\");\n        return null;\n    }\n\n    /**\n     * Returns promise to remove from any storage the currently authenticated user.\n     */\n    public async removeUser(): Promise<void> {\n        const logger = this._logger.create(\"removeUser\");\n        await this.storeUser(null);\n        logger.info(\"user removed from storage\");\n        this._events.unload();\n    }\n\n    /**\n     * Returns promise to trigger a redirect of the current window to the authorization endpoint.\n     */\n    public async signinRedirect(args: SigninRedirectArgs = {}): Promise<void> {\n        this._logger.create(\"signinRedirect\");\n        const {\n            redirectMethod,\n            ...requestArgs\n        } = args;\n        const handle = await this._redirectNavigator.prepare({ redirectMethod });\n        await this._signinStart({\n            request_type: \"si:r\",\n            ...requestArgs,\n        }, handle);\n    }\n\n    /**\n     * Returns promise to process response from the authorization endpoint. The result of the promise is the authenticated `User`.\n     */\n    public async signinRedirectCallback(url = window.location.href): Promise<User> {\n        const logger = this._logger.create(\"signinRedirectCallback\");\n        const user = await this._signinEnd(url);\n        if (user.profile && user.profile.sub) {\n            logger.info(\"success, signed in subject\", user.profile.sub);\n        }\n        else {\n            logger.info(\"no subject\");\n        }\n\n        return user;\n    }\n\n    /**\n     * Returns promise to process the signin with user/password. The result of the promise is the authenticated `User`.\n     *\n     * Throws an ErrorResponse in case of wrong authentication.\n     */\n    public async signinResourceOwnerCredentials({\n        username,\n        password,\n        skipUserInfo = false,\n    }: SigninResourceOwnerCredentialsArgs ) {\n        const logger = this._logger.create(\"signinResourceOwnerCredential\");\n\n        const signinResponse = await this._client.processResourceOwnerPasswordCredentials({ username, password, skipUserInfo, extraTokenParams: this.settings.extraTokenParams });\n        logger.debug(\"got signin response\");\n\n        const user = await this._buildUser(signinResponse);\n        if (user.profile && user.profile.sub) {\n            logger.info(\"success, signed in subject\", user.profile.sub);\n        } else {\n            logger.info(\"no subject\");\n        }\n        return user;\n    }\n\n    /**\n     * Returns promise to trigger a request (via a popup window) to the authorization endpoint. The result of the promise is the authenticated `User`.\n     */\n    public async signinPopup(args: SigninPopupArgs = {}): Promise<User> {\n        const logger = this._logger.create(\"signinPopup\");\n        const {\n            popupWindowFeatures,\n            popupWindowTarget,\n            ...requestArgs\n        } = args;\n        const url = this.settings.popup_redirect_uri;\n        if (!url) {\n            logger.throw(new Error(\"No popup_redirect_uri configured\"));\n        }\n\n        const handle = await this._popupNavigator.prepare({ popupWindowFeatures, popupWindowTarget });\n        const user = await this._signin({\n            request_type: \"si:p\",\n            redirect_uri: url,\n            display: \"popup\",\n            ...requestArgs,\n        }, handle);\n        if (user) {\n            if (user.profile && user.profile.sub) {\n                logger.info(\"success, signed in subject\", user.profile.sub);\n            }\n            else {\n                logger.info(\"no subject\");\n            }\n        }\n\n        return user;\n    }\n    /**\n     * Returns promise to notify the opening window of response from the authorization endpoint.\n     */\n    public async signinPopupCallback(url = window.location.href, keepOpen = false): Promise<void> {\n        const logger = this._logger.create(\"signinPopupCallback\");\n        await this._popupNavigator.callback(url, { keepOpen });\n        logger.info(\"success\");\n    }\n\n    /**\n     * Returns promise to trigger a silent request (via an iframe) to the authorization endpoint.\n     * The result of the promise is the authenticated `User`.\n     */\n    public async signinSilent(args: SigninSilentArgs = {}): Promise<User | null> {\n        const logger = this._logger.create(\"signinSilent\");\n        const {\n            silentRequestTimeoutInSeconds,\n            resource,\n            ...requestArgs\n        } = args;\n        // first determine if we have a refresh token, or need to use iframe\n        let user = await this._loadUser();\n        if (user?.refresh_token) {\n            logger.debug(\"using refresh token\");\n            const state = new RefreshState(user as Required<User>, resource);\n            return await this._useRefreshToken(state);\n        }\n\n        const url = this.settings.silent_redirect_uri;\n        if (!url) {\n            logger.throw(new Error(\"No silent_redirect_uri configured\"));\n        }\n\n        let verifySub: string | undefined;\n        if (user && this.settings.validateSubOnSilentRenew) {\n            logger.debug(\"subject prior to silent renew:\", user.profile.sub);\n            verifySub = user.profile.sub;\n        }\n\n        const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n        user = await this._signin({\n            request_type: \"si:s\",\n            redirect_uri: url,\n            prompt: \"none\",\n            id_token_hint: this.settings.includeIdTokenInSilentRenew ? user?.id_token : undefined,\n            ...requestArgs,\n        }, handle, verifySub);\n        if (user) {\n            if (user.profile?.sub) {\n                logger.info(\"success, signed in subject\", user.profile.sub);\n            }\n            else {\n                logger.info(\"no subject\");\n            }\n        }\n\n        return user;\n    }\n\n    protected async _useRefreshToken(state: RefreshState): Promise<User> {\n        const response = await this._client.useRefreshToken({\n            state,\n            timeoutInSeconds: this.settings.silentRequestTimeoutInSeconds,\n        });\n        const user = new User({ ...state, ...response });\n\n        await this.storeUser(user);\n        this._events.load(user);\n        return user;\n    }\n\n    /**\n     * Returns promise to notify the parent window of response from the authorization endpoint.\n     */\n    public async signinSilentCallback(url = window.location.href): Promise<void> {\n        const logger = this._logger.create(\"signinSilentCallback\");\n        await this._iframeNavigator.callback(url);\n        logger.info(\"success\");\n    }\n\n    public async signinCallback(url = window.location.href): Promise<User | void> {\n        const { state } = await this._client.readSigninResponseState(url);\n        switch (state.request_type) {\n            case \"si:r\":\n                return await this.signinRedirectCallback(url);\n            case \"si:p\":\n                return await this.signinPopupCallback(url);\n            case \"si:s\":\n                return await this.signinSilentCallback(url);\n            default:\n                throw new Error(\"invalid response_type in state\");\n        }\n    }\n\n    public async signoutCallback(url = window.location.href, keepOpen = false): Promise<void> {\n        const { state } = await this._client.readSignoutResponseState(url);\n        if (!state) {\n            return;\n        }\n\n        switch (state.request_type) {\n            case \"so:r\":\n                await this.signoutRedirectCallback(url);\n                break;\n            case \"so:p\":\n                await this.signoutPopupCallback(url, keepOpen);\n                break;\n            case \"so:s\":\n                await this.signoutSilentCallback(url);\n                break;\n            default:\n                throw new Error(\"invalid response_type in state\");\n        }\n    }\n\n    /**\n     * Returns promise to query OP for user's current signin status. Returns object with session_state and subject identifier.\n     */\n    public async querySessionStatus(args: QuerySessionStatusArgs = {}): Promise<SessionStatus | null> {\n        const logger = this._logger.create(\"querySessionStatus\");\n        const {\n            silentRequestTimeoutInSeconds,\n            ...requestArgs\n        } = args;\n        const url = this.settings.silent_redirect_uri;\n        if (!url) {\n            logger.throw(new Error(\"No silent_redirect_uri configured\"));\n        }\n\n        const user = await this._loadUser();\n        const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n        const navResponse = await this._signinStart({\n            request_type: \"si:s\", // this acts like a signin silent\n            redirect_uri: url,\n            prompt: \"none\",\n            id_token_hint: this.settings.includeIdTokenInSilentRenew ? user?.id_token : undefined,\n            response_type: this.settings.query_status_response_type,\n            scope: \"openid\",\n            skipUserInfo: true,\n            ...requestArgs,\n        }, handle);\n        try {\n            const signinResponse = await this._client.processSigninResponse(navResponse.url);\n            logger.debug(\"got signin response\");\n\n            if (signinResponse.session_state && signinResponse.profile.sub) {\n                logger.info(\"success for subject\", signinResponse.profile.sub);\n                return {\n                    session_state: signinResponse.session_state,\n                    sub: signinResponse.profile.sub,\n                    sid: signinResponse.profile.sid,\n                };\n            }\n\n            logger.info(\"success, user not authenticated\");\n            return null;\n        }\n        catch (err) {\n            if (this.settings.monitorAnonymousSession && err instanceof ErrorResponse) {\n                switch (err.error) {\n                    case \"login_required\":\n                    case \"consent_required\":\n                    case \"interaction_required\":\n                    case \"account_selection_required\":\n                        logger.info(\"success for anonymous user\");\n                        return {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                            session_state: err.session_state!,\n                        };\n                }\n            }\n            throw err;\n        }\n    }\n\n    protected async _signin(args: CreateSigninRequestArgs, handle: IWindow, verifySub?: string): Promise<User> {\n        const navResponse = await this._signinStart(args, handle);\n        return await this._signinEnd(navResponse.url, verifySub);\n    }\n    protected async _signinStart(args: CreateSigninRequestArgs, handle: IWindow): Promise<NavigateResponse> {\n        const logger = this._logger.create(\"_signinStart\");\n\n        try {\n            const signinRequest = await this._client.createSigninRequest(args);\n            logger.debug(\"got signin request\");\n\n            return await handle.navigate({\n                url: signinRequest.url,\n                state: signinRequest.state.id,\n                response_mode: signinRequest.state.response_mode,\n                scriptOrigin: this.settings.iframeScriptOrigin,\n            });\n        }\n        catch (err) {\n            logger.debug(\"error after preparing navigator, closing navigator window\");\n            handle.close();\n            throw err;\n        }\n    }\n    protected async _signinEnd(url: string, verifySub?: string): Promise<User> {\n        const logger = this._logger.create(\"_signinEnd\");\n        const signinResponse = await this._client.processSigninResponse(url);\n        logger.debug(\"got signin response\");\n\n        const user = await this._buildUser(signinResponse, verifySub);\n        return user;\n    }\n\n    protected async _buildUser(signinResponse: SigninResponse, verifySub?: string) {\n        const logger = this._logger.create(\"_buildUser\");\n        const user = new User(signinResponse);\n        if (verifySub) {\n            if (verifySub !== user.profile.sub) {\n                logger.debug(\"current user does not match user returned from signin. sub from signin:\", user.profile.sub);\n                throw new ErrorResponse({ ...signinResponse, error: \"login_required\" });\n            }\n            logger.debug(\"current user matches user returned from signin\");\n        }\n\n        await this.storeUser(user);\n        logger.debug(\"user stored\");\n        this._events.load(user);\n\n        return user;\n    }\n\n    /**\n     * Returns promise to trigger a redirect of the current window to the end session endpoint.\n     */\n    public async signoutRedirect(args: SignoutRedirectArgs = {}): Promise<void> {\n        const logger = this._logger.create(\"signoutRedirect\");\n        const {\n            redirectMethod,\n            ...requestArgs\n        } = args;\n        const handle = await this._redirectNavigator.prepare({ redirectMethod });\n        await this._signoutStart({\n            request_type: \"so:r\",\n            post_logout_redirect_uri: this.settings.post_logout_redirect_uri,\n            ...requestArgs,\n        }, handle);\n        logger.info(\"success\");\n    }\n\n    /**\n     * Returns promise to process response from the end session endpoint.\n     */\n    public async signoutRedirectCallback(url = window.location.href): Promise<SignoutResponse> {\n        const logger = this._logger.create(\"signoutRedirectCallback\");\n        const response = await this._signoutEnd(url);\n        logger.info(\"success\");\n        return response;\n    }\n\n    /**\n     * Returns promise to trigger a redirect of a popup window window to the end session endpoint.\n     */\n    public async signoutPopup(args: SignoutPopupArgs = {}): Promise<void> {\n        const logger = this._logger.create(\"signoutPopup\");\n        const {\n            popupWindowFeatures,\n            popupWindowTarget,\n            ...requestArgs\n        } = args;\n        const url = this.settings.popup_post_logout_redirect_uri;\n\n        const handle = await this._popupNavigator.prepare({ popupWindowFeatures, popupWindowTarget });\n        await this._signout({\n            request_type: \"so:p\",\n            post_logout_redirect_uri: url,\n            // we're putting a dummy entry in here because we\n            // need a unique id from the state for notification\n            // to the parent window, which is necessary if we\n            // plan to return back to the client after signout\n            // and so we can close the popup after signout\n            state: url == null ? undefined : {},\n            ...requestArgs,\n        }, handle);\n        logger.info(\"success\");\n    }\n\n    /**\n     * Returns promise to process response from the end session endpoint from a popup window.\n     */\n    public async signoutPopupCallback(url = window.location.href, keepOpen = false): Promise<void> {\n        const logger = this._logger.create(\"signoutPopupCallback\");\n        await this._popupNavigator.callback(url, { keepOpen });\n        logger.info(\"success\");\n    }\n\n    protected async _signout(args: CreateSignoutRequestArgs, handle: IWindow): Promise<SignoutResponse> {\n        const navResponse = await this._signoutStart(args, handle);\n        return await this._signoutEnd(navResponse.url);\n    }\n    protected async _signoutStart(args: CreateSignoutRequestArgs = {}, handle: IWindow): Promise<NavigateResponse> {\n        const logger = this._logger.create(\"_signoutStart\");\n\n        try {\n            const user = await this._loadUser();\n            logger.debug(\"loaded current user from storage\");\n\n            if (this.settings.revokeTokensOnSignout) {\n                await this._revokeInternal(user);\n            }\n\n            const id_token = args.id_token_hint || user && user.id_token;\n            if (id_token) {\n                logger.debug(\"setting id_token_hint in signout request\");\n                args.id_token_hint = id_token;\n            }\n\n            await this.removeUser();\n            logger.debug(\"user removed, creating signout request\");\n\n            const signoutRequest = await this._client.createSignoutRequest(args);\n            logger.debug(\"got signout request\");\n\n            return await handle.navigate({\n                url: signoutRequest.url,\n                state: signoutRequest.state?.id,\n                scriptOrigin: this.settings.iframeScriptOrigin,\n            });\n        }\n        catch (err) {\n            logger.debug(\"error after preparing navigator, closing navigator window\");\n            handle.close();\n            throw err;\n        }\n    }\n    protected async _signoutEnd(url: string): Promise<SignoutResponse> {\n        const logger = this._logger.create(\"_signoutEnd\");\n        const signoutResponse = await this._client.processSignoutResponse(url);\n        logger.debug(\"got signout response\");\n\n        return signoutResponse;\n    }\n\n    /**\n     * Returns promise to trigger a silent request (via an iframe) to the end session endpoint.\n     */\n    public async signoutSilent(args: SignoutSilentArgs = {}): Promise<void> {\n        const logger = this._logger.create(\"signoutSilent\");\n        const {\n            silentRequestTimeoutInSeconds,\n            ...requestArgs\n        } = args;\n\n        const id_token_hint = this.settings.includeIdTokenInSilentSignout\n            ? (await this._loadUser())?.id_token\n            : undefined;\n\n        const url = this.settings.popup_post_logout_redirect_uri;\n        const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n        await this._signout({\n            request_type: \"so:s\",\n            post_logout_redirect_uri: url,\n            id_token_hint: id_token_hint,\n            ...requestArgs,\n        }, handle);\n\n        logger.info(\"success\");\n    }\n\n    /**\n     * Returns promise to notify the parent window of response from the end session endpoint.\n     */\n    public async signoutSilentCallback(url = window.location.href): Promise<void> {\n        const logger = this._logger.create(\"signoutSilentCallback\");\n        await this._iframeNavigator.callback(url);\n        logger.info(\"success\");\n    }\n\n    public async revokeTokens(types?: RevokeTokensTypes): Promise<void> {\n        const user = await this._loadUser();\n        await this._revokeInternal(user, types);\n    }\n\n    protected async _revokeInternal(user: User | null, types = this.settings.revokeTokenTypes): Promise<void> {\n        const logger = this._logger.create(\"_revokeInternal\");\n        if (!user) return;\n\n        const typesPresent = types.filter(type => typeof user[type] === \"string\");\n\n        if (!typesPresent.length) {\n            logger.debug(\"no need to revoke due to no token(s)\");\n            return;\n        }\n\n        // don't Promise.all, order matters\n        for (const type of typesPresent) {\n            await this._client.revokeToken(\n                user[type]!, // eslint-disable-line @typescript-eslint/no-non-null-assertion\n                type,\n            );\n            logger.info(`${type} revoked successfully`);\n            if (type !== \"access_token\") {\n                user[type] = null as never;\n            }\n        }\n\n        await this.storeUser(user);\n        logger.debug(\"user stored\");\n        this._events.load(user);\n    }\n\n    /**\n     * Enables silent renew for the `UserManager`.\n     */\n    public startSilentRenew(): void {\n        this._logger.create(\"startSilentRenew\");\n        void this._silentRenewService.start();\n    }\n\n    /**\n     * Disables silent renew for the `UserManager`.\n     */\n    public stopSilentRenew(): void {\n        this._silentRenewService.stop();\n    }\n\n    protected get _userStoreKey(): string {\n        return `user:${this.settings.authority}:${this.settings.client_id}`;\n    }\n\n    protected async _loadUser(): Promise<User | null> {\n        const logger = this._logger.create(\"_loadUser\");\n        const storageString = await this.settings.userStore.get(this._userStoreKey);\n        if (storageString) {\n            logger.debug(\"user storageString loaded\");\n            return User.fromStorageString(storageString);\n        }\n\n        logger.debug(\"no user storageString\");\n        return null;\n    }\n\n    public async storeUser(user: User | null): Promise<void> {\n        const logger = this._logger.create(\"storeUser\");\n        if (user) {\n            logger.debug(\"storing user\");\n            const storageString = user.toStorageString();\n            await this.settings.userStore.set(this._userStoreKey, storageString);\n        }\n        else {\n            this._logger.debug(\"removing user\");\n            await this.settings.userStore.remove(this._userStoreKey);\n        }\n    }\n\n    /**\n     * Removes stale state entries in storage for incomplete authorize requests.\n     */\n    public async clearStaleState(): Promise<void> {\n        await this._client.clearStaleState();\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\nimport type { UserManagerSettingsStore } from \"../UserManagerSettings\";\nimport type { INavigator } from \"./INavigator\";\nimport type { IWindow } from \"./IWindow\";\n\n/**\n * @public\n */\nexport interface RedirectParams {\n    redirectMethod?: \"replace\" | \"assign\";\n    redirectTarget?: \"top\" | \"self\";\n}\n\n/**\n * @internal\n */\nexport class RedirectNavigator implements INavigator {\n    private readonly _logger = new Logger(\"RedirectNavigator\");\n\n    constructor(private _settings: UserManagerSettingsStore) {}\n\n    public async prepare({\n        redirectMethod = this._settings.redirectMethod,\n        redirectTarget = this._settings.redirectTarget,\n    }: RedirectParams): Promise<IWindow> {\n        this._logger.create(\"prepare\");\n        let targetWindow = window.self as Window;\n\n        if (redirectTarget === \"top\") {\n            targetWindow = window.top ?? window.self;\n        }\n    \n        const redirect = targetWindow.location[redirectMethod].bind(targetWindow.location) as (url: string) => never;\n        let abort: (reason: Error) => void;\n        return {\n            navigate: async (params): Promise<never> => {\n                this._logger.create(\"navigate\");\n                // We use a promise that never resolves to block the caller\n                const promise = new Promise((resolve, reject) => {\n                    abort = reject;\n                });\n                redirect(params.url);\n                return await (promise as Promise<never>);\n            },\n            close: () => {\n                this._logger.create(\"close\");\n                abort?.(new Error(\"Redirect aborted\"));\n                targetWindow.stop();\n            },\n        };\n    }\n\n    public async callback(): Promise<void> {\n        return;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\nimport { PopupWindow, type PopupWindowParams } from \"./PopupWindow\";\nimport type { INavigator } from \"./INavigator\";\nimport type { UserManagerSettingsStore } from \"../UserManagerSettings\";\n\n/**\n * @internal\n */\nexport class PopupNavigator implements INavigator {\n    private readonly _logger = new Logger(\"PopupNavigator\");\n\n    constructor(private _settings: UserManagerSettingsStore) {}\n\n    public async prepare({\n        popupWindowFeatures = this._settings.popupWindowFeatures,\n        popupWindowTarget = this._settings.popupWindowTarget,\n    }: PopupWindowParams): Promise<PopupWindow> {\n        return new PopupWindow({ popupWindowFeatures, popupWindowTarget });\n    }\n\n    public async callback(url: string, { keepOpen = false }): Promise<void> {\n        this._logger.create(\"callback\");\n\n        PopupWindow.notifyOpener(url, keepOpen);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\nimport type { UserManagerSettingsStore } from \"../UserManagerSettings\";\nimport { IFrameWindow, type IFrameWindowParams } from \"./IFrameWindow\";\nimport type { INavigator } from \"./INavigator\";\n\n/**\n * @internal\n */\nexport class IFrameNavigator implements INavigator {\n    private readonly _logger = new Logger(\"IFrameNavigator\");\n\n    constructor(private _settings: UserManagerSettingsStore) {}\n\n    public async prepare({\n        silentRequestTimeoutInSeconds = this._settings.silentRequestTimeoutInSeconds,\n    }: IFrameWindowParams): Promise<IFrameWindow> {\n        return new IFrameWindow({ silentRequestTimeoutInSeconds });\n    }\n\n    public async callback(url: string): Promise<void> {\n        this._logger.create(\"callback\");\n        IFrameWindow.notifyParent(url, this._settings.iframeNotifyParentOrigin);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, Timer } from \"./utils\";\nimport { ErrorTimeout } from \"./errors\";\nimport type { UserManager } from \"./UserManager\";\nimport type { AccessTokenCallback } from \"./AccessTokenEvents\";\n\n/**\n * @internal\n */\nexport class SilentRenewService {\n    protected _logger = new Logger(\"SilentRenewService\");\n    private _isStarted = false;\n    private readonly _retryTimer = new Timer(\"Retry Silent Renew\");\n\n    public constructor(private _userManager: UserManager) {}\n\n    public async start(): Promise<void> {\n        const logger = this._logger.create(\"start\");\n        if (!this._isStarted) {\n            this._isStarted = true;\n            this._userManager.events.addAccessTokenExpiring(this._tokenExpiring);\n            this._retryTimer.addHandler(this._tokenExpiring);\n\n            // this will trigger loading of the user so the expiring events can be initialized\n            try {\n                await this._userManager.getUser();\n                // deliberate nop\n            }\n            catch (err) {\n                // catch to suppress errors since we're in a ctor\n                logger.error(\"getUser error\", err);\n            }\n        }\n    }\n\n    public stop(): void {\n        if (this._isStarted) {\n            this._retryTimer.cancel();\n            this._retryTimer.removeHandler(this._tokenExpiring);\n            this._userManager.events.removeAccessTokenExpiring(this._tokenExpiring);\n            this._isStarted = false;\n        }\n    }\n\n    protected _tokenExpiring: AccessTokenCallback = async () => {\n        const logger = this._logger.create(\"_tokenExpiring\");\n        try {\n            await this._userManager.signinSilent();\n            logger.debug(\"silent token renewal successful\");\n        }\n        catch (err) {\n            if (err instanceof ErrorTimeout) {\n                // no response from authority server, e.g. IFrame timeout, ...\n                logger.warn(\"ErrorTimeout from signinSilent:\", err, \"retry in 5s\");\n                this._retryTimer.init(5);\n                return;\n            }\n\n            logger.error(\"Error from signinSilent:\", err);\n            this._userManager.events._raiseSilentRenewError(err as Error);\n        }\n    };\n}\n","// Copyright (C) AuthTS Contributors\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport type { UserProfile } from \"./User\";\n\n/**\n * Fake state store implementation necessary for validating refresh token requests.\n *\n * @public\n */\nexport class RefreshState {\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    public readonly data?: unknown;\n\n    public readonly refresh_token: string;\n    public readonly id_token?: string;\n    public readonly session_state: string | null;\n    public readonly scope?: string;\n    public readonly profile: UserProfile;\n    public readonly resource?: string | string[];\n\n    constructor(args: {\n        refresh_token: string;\n        id_token?: string;\n        session_state: string | null;\n        scope?: string;\n        profile: UserProfile;\n\n        state?: unknown;\n    }, resource?: string | string[]) {\n        this.refresh_token = args.refresh_token;\n        this.id_token = args.id_token;\n        this.session_state = args.session_state;\n        this.scope = args.scope;\n        this.profile = args.profile;\n        this.resource = resource;\n\n        this.data = args.state;\n\n    }\n}\n","// @ts-expect-error avoid enabling resolveJsonModule to keep build process simple\nimport { version } from \"../package.json\";\n\n/**\n * @public\n */\nexport const Version: string = version;\n","{\n  \"name\": \"oidc-client-ts\",\n  \"version\": \"2.3.0\",\n  \"description\": \"OpenID Connect (OIDC) & OAuth2 client library\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com:authts/oidc-client-ts.git\"\n  },\n  \"homepage\": \"https://github.com/authts/oidc-client-ts#readme\",\n  \"license\": \"Apache-2.0\",\n  \"main\": \"dist/umd/oidc-client-ts.js\",\n  \"types\": \"dist/types/oidc-client-ts.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./dist/types/oidc-client-ts.d.ts\",\n      \"import\": \"./dist/esm/oidc-client-ts.js\",\n      \"require\": \"./dist/umd/oidc-client-ts.js\"\n    },\n    \"./package.json\": \"./package.json\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"keywords\": [\n    \"authentication\",\n    \"oauth2\",\n    \"oidc\",\n    \"openid\",\n    \"OpenID Connect\"\n  ],\n  \"scripts\": {\n    \"build\": \"node scripts/build.js && npm run build-types\",\n    \"build-types\": \"tsc -p tsconfig.build.json && api-extractor run\",\n    \"clean\": \"git clean -fdX dist lib *.tsbuildinfo\",\n    \"prepack\": \"npm run build\",\n    \"test\": \"tsc && jest\",\n    \"typedoc\": \"typedoc\",\n    \"lint\": \"eslint --max-warnings=0 --cache .\",\n    \"prepare\": \"husky install\"\n  },\n  \"dependencies\": {\n    \"crypto-js\": \"^4.1.1\",\n    \"jwt-decode\": \"^3.1.2\"\n  },\n  \"devDependencies\": {\n    \"@microsoft/api-extractor\": \"^7.35.0\",\n    \"@testing-library/jest-dom\": \"^6.0.0\",\n    \"@types/crypto-js\": \"^4.0.2\",\n    \"@types/jest\": \"^29.2.3\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.4.1\",\n    \"@typescript-eslint/parser\": \"^6.4.1\",\n    \"esbuild\": \"^0.17.0\",\n    \"eslint\": \"^8.5.0\",\n    \"eslint-plugin-testing-library\": \"^6.0.0\",\n    \"http-proxy-middleware\": \"^2.0.1\",\n    \"husky\": \"^8.0.1\",\n    \"jest\": \"^29.3.1\",\n    \"jest-environment-jsdom\": \"^29.3.1\",\n    \"jest-mock\": \"^29.3.1\",\n    \"lint-staged\": \"^14.0.0\",\n    \"ts-jest\": \"^29.0.3\",\n    \"typedoc\": \"^0.25.0\",\n    \"typescript\": \"~5.0.4\",\n    \"yn\": \"^5.0.0\"\n  },\n  \"engines\": {\n    \"node\": \">=12.13.0\"\n  },\n  \"lint-staged\": {\n    \"*.{js,jsx,ts,tsx}\": \"eslint --cache --fix\"\n  }\n}\n","export { createOidc } from \"./oidc\";\nexport type { Oidc } from \"./oidc\";\nexport { decodeJwt } from \"./tools/decodeJwt\";\n","import { UserManager, type User } from \"oidc-client-ts\";\nimport { id } from \"tsafe/id\";\nimport { readExpirationTimeInJwt } from \"./tools/readExpirationTimeInJwt\";\nimport { assert, type Equals } from \"tsafe/assert\";\nimport { addQueryParamToUrl, retrieveQueryParamFromUrl } from \"./tools/urlQueryParams\";\nimport { fnv1aHashToHex } from \"./tools/fnv1aHashToHex\";\nimport { Deferred } from \"./tools/Deferred\";\n\nexport declare type Oidc = Oidc.LoggedIn | Oidc.NotLoggedIn;\n\nexport declare namespace Oidc {\n    export type Common = {\n        params: {\n            issuerUri: string;\n            clientId: string;\n        };\n    };\n\n    export type NotLoggedIn = Common & {\n        isUserLoggedIn: false;\n        login: (params: {\n            doesCurrentHrefRequiresAuth: boolean;\n            extraQueryParams?: Record<string, string>;\n        }) => Promise<never>;\n    };\n\n    export type LoggedIn = Common & {\n        isUserLoggedIn: true;\n        renewTokens(): Promise<void>;\n        getTokens: () => Tokens;\n        logout: (\n            params: { redirectTo: \"home\" | \"current page\" } | { redirectTo: \"specific url\"; url: string }\n        ) => Promise<never>;\n    };\n\n    export type Tokens = {\n        accessToken: string;\n        accessTokenExpirationTime: number;\n        idToken: string;\n        refreshToken: string;\n        refreshTokenExpirationTime: number;\n    };\n}\n\nconst paramsToRetrieveFromSuccessfulLogin = [\"code\", \"state\", \"session_state\"] as const;\n\n/** @see: https://github.com/garronej/oidc-spa#option-1-usage-without-involving-the-ui-framework */\nexport async function createOidc(params: {\n    issuerUri: string;\n    clientId: string;\n    transformUrlBeforeRedirect?: (url: string) => string;\n    getExtraQueryParams?: () => Record<string, string>;\n    /**\n     * This parameter have to be provided provide if your App is not hosted at the origin of the subdomain.\n     * For example if your site is hosted by navigating to `https://www.example.com`\n     * you don't have to provide this parameter.\n     * On the other end if your site is hosted by navigating to `https://www.example.com/my-app`\n     * Then you want to set publicUrl to `/my-app`\n     *\n     * Be mindful that `${window.location.origin}${publicUrl}/silent-sso.html` must return the `silent-sso.html` that\n     * you are supposed to have created in your `public/` directory.\n     *\n     * If your are still using `create-react-app` you can just set\n     * publicUrl to `process.env.PUBLIC_URL` and don't have to think about it further.\n     */\n    publicUrl?: string;\n}): Promise<Oidc> {\n    const {\n        issuerUri,\n        clientId,\n        transformUrlBeforeRedirect = url => url,\n        getExtraQueryParams,\n        publicUrl: publicUrl_params\n    } = params;\n\n    const publicUrl = (() => {\n        if (publicUrl_params === undefined) {\n            return window.location.origin;\n        }\n\n        if (publicUrl_params.startsWith(\"http\")) {\n            return publicUrl_params.replace(/\\/$/, \"\");\n        }\n\n        return `${window.location.origin}${publicUrl_params}`;\n    })();\n\n    const configHash = fnv1aHashToHex(`${issuerUri} ${clientId}`);\n    const configHashKey = \"configHash\";\n\n    const userManager = new UserManager({\n        \"authority\": issuerUri,\n        \"client_id\": clientId,\n        \"redirect_uri\": \"\" /* provided when calling login */,\n        \"response_type\": \"code\",\n        \"scope\": \"openid profile\",\n        \"automaticSilentRenew\": false,\n        \"silent_redirect_uri\": `${publicUrl}/silent-sso.html?${configHashKey}=${configHash}`\n    });\n\n    const login: Oidc.NotLoggedIn[\"login\"] = async ({\n        doesCurrentHrefRequiresAuth,\n        extraQueryParams\n    }) => {\n        //NOTE: We know there is a extraQueryParameter option but it doesn't allow\n        // to control the encoding so we have to highjack global URL Class that is\n        // used internally by oidc-client-ts. It's save to do so since this is the\n        // last thing that will be done before the redirect.\n\n        const URL_real = window.URL;\n\n        function URL(...args: ConstructorParameters<typeof URL_real>) {\n            const urlInstance = new URL_real(...args);\n\n            return new Proxy(urlInstance, {\n                \"get\": (target, prop) => {\n                    if (prop === \"href\") {\n                        let url = urlInstance.href;\n\n                        Object.entries({\n                            ...getExtraQueryParams?.(),\n                            ...extraQueryParams\n                        }).forEach(\n                            ([name, value]) =>\n                                (url = addQueryParamToUrl({\n                                    url,\n                                    name,\n                                    value\n                                }).newUrl)\n                        );\n\n                        url = transformUrlBeforeRedirect(url);\n\n                        return url;\n                    }\n\n                    //@ts-expect-error\n                    return target[prop];\n                }\n            });\n        }\n\n        Object.defineProperty(window, \"URL\", { \"value\": URL });\n\n        const { newUrl: redirect_uri } = addQueryParamToUrl({\n            \"url\": window.location.href,\n            \"name\": configHashKey,\n            \"value\": configHash\n        });\n\n        await userManager.signinRedirect({\n            redirect_uri,\n            \"redirectMethod\": doesCurrentHrefRequiresAuth ? \"replace\" : \"assign\"\n        });\n        return new Promise<never>(() => {});\n    };\n\n    const currentTokens = await (async function getUser() {\n        read_successful_login_query_params: {\n            let url = window.location.href;\n\n            {\n                const result = retrieveQueryParamFromUrl({ \"name\": configHashKey, url });\n\n                if (!result.wasPresent || result.value !== configHash) {\n                    break read_successful_login_query_params;\n                }\n\n                url = result.newUrl;\n            }\n\n            {\n                const result = retrieveQueryParamFromUrl({ \"name\": \"error\", url });\n\n                if (result.wasPresent) {\n                    throw new Error(`OIDC error: ${result.value}`);\n                }\n            }\n\n            let loginSuccessUrl = \"https://dummy.com\";\n\n            for (const name of paramsToRetrieveFromSuccessfulLogin) {\n                const result = retrieveQueryParamFromUrl({ name, url });\n\n                assert(result.wasPresent);\n\n                loginSuccessUrl = addQueryParamToUrl({\n                    \"url\": loginSuccessUrl,\n                    \"name\": name,\n                    \"value\": result.value\n                }).newUrl;\n\n                url = result.newUrl;\n            }\n\n            window.history.pushState(null, \"\", url);\n\n            let user: User | undefined = undefined;\n\n            try {\n                user = await userManager.signinRedirectCallback(loginSuccessUrl);\n            } catch {\n                //NOTE: The user has likely pressed the back button just after logging in.\n                return undefined;\n            }\n\n            return user;\n        }\n\n        restore_from_session: {\n            const user = await userManager.getUser();\n\n            if (user === null) {\n                break restore_from_session;\n            }\n\n            // The server might have restarted and the session might have been lost.\n            try {\n                await userManager.signinSilent();\n            } catch {\n                return undefined;\n            }\n\n            return user;\n        }\n\n        restore_from_http_only_cookie: {\n            const dLoginSuccessUrl = new Deferred<string | undefined>();\n\n            const timeout = setTimeout(\n                () =>\n                    dLoginSuccessUrl.reject(\n                        new Error(`SSO silent login timeout with clientId: ${clientId}`)\n                    ),\n                5000\n            );\n\n            const listener = (event: MessageEvent) => {\n                if (event.origin !== window.location.origin || typeof event.data !== \"string\") {\n                    return;\n                }\n\n                const url = event.data;\n\n                {\n                    let result: ReturnType<typeof retrieveQueryParamFromUrl>;\n\n                    try {\n                        result = retrieveQueryParamFromUrl({ \"name\": configHashKey, url });\n                    } catch {\n                        // This could possibly happen if url is not a valid url.\n                        return;\n                    }\n\n                    if (!result.wasPresent || result.value !== configHash) {\n                        return;\n                    }\n                }\n\n                clearTimeout(timeout);\n\n                window.removeEventListener(\"message\", listener);\n\n                {\n                    const result = retrieveQueryParamFromUrl({ \"name\": \"error\", url });\n\n                    if (result.wasPresent) {\n                        dLoginSuccessUrl.resolve(undefined);\n                        return;\n                    }\n                }\n\n                let loginSuccessUrl = \"https://dummy.com\";\n\n                for (const name of paramsToRetrieveFromSuccessfulLogin) {\n                    const result = retrieveQueryParamFromUrl({ name, url });\n\n                    assert(result.wasPresent);\n\n                    loginSuccessUrl = addQueryParamToUrl({\n                        \"url\": loginSuccessUrl,\n                        \"name\": name,\n                        \"value\": result.value\n                    }).newUrl;\n                }\n\n                dLoginSuccessUrl.resolve(loginSuccessUrl);\n            };\n\n            window.addEventListener(\"message\", listener, false);\n\n            userManager.signinSilent({ \"silentRequestTimeoutInSeconds\": 1 }).catch(() => {\n                /* error expected */\n            });\n\n            const loginSuccessUrl = await dLoginSuccessUrl.pr;\n\n            if (loginSuccessUrl === undefined) {\n                break restore_from_http_only_cookie;\n            }\n\n            const user = await userManager.signinRedirectCallback(loginSuccessUrl);\n\n            return user;\n        }\n\n        return undefined;\n    })().then(user => {\n        if (user === undefined) {\n            return undefined;\n        }\n\n        const tokens = userToTokens(user);\n\n        if (tokens.refreshTokenExpirationTime < tokens.accessTokenExpirationTime) {\n            console.warn(\n                [\n                    \"The OIDC refresh token shorter than the one of the access token.\",\n                    \"This is very unusual and probably a misconfiguration.\",\n                    `Check your oidc server configuration for ${clientId} ${issuerUri}`\n                ].join(\" \")\n            );\n        }\n\n        return tokens;\n    });\n\n    const common: Oidc.Common = {\n        \"params\": {\n            issuerUri,\n            clientId\n        }\n    };\n\n    if (currentTokens === undefined) {\n        return id<Oidc.NotLoggedIn>({\n            ...common,\n            \"isUserLoggedIn\": false,\n            login\n        });\n    }\n\n    const oidc = id<Oidc.LoggedIn>({\n        ...common,\n        \"isUserLoggedIn\": true,\n        \"getTokens\": () => ({\n            \"accessToken\": currentTokens.accessToken,\n            \"idToken\": currentTokens.idToken,\n            \"refreshToken\": currentTokens.refreshToken,\n            \"refreshTokenExpirationTime\": currentTokens.refreshTokenExpirationTime,\n            \"accessTokenExpirationTime\": currentTokens.accessTokenExpirationTime\n        }),\n        \"logout\": async params => {\n            await userManager.signoutRedirect({\n                \"post_logout_redirect_uri\": (() => {\n                    switch (params.redirectTo) {\n                        case \"current page\":\n                            return window.location.href;\n                        case \"home\":\n                            return publicUrl;\n                        case \"specific url\":\n                            return params.url;\n                    }\n                    assert<Equals<typeof params, never>>(false);\n                })()\n            });\n            return new Promise<never>(() => {});\n        },\n        \"renewTokens\": async () => {\n            const user = await userManager.signinSilent();\n\n            assert(user !== null);\n\n            Object.assign(currentTokens, userToTokens(user));\n        }\n    });\n\n    (function scheduleAutomaticRenew() {\n        const msBeforeExpiration =\n            Math.min(currentTokens.accessTokenExpirationTime, currentTokens.refreshTokenExpirationTime) -\n            Date.now();\n\n        setTimeout(async () => {\n            try {\n                await oidc.renewTokens();\n            } catch {\n                await login({ \"doesCurrentHrefRequiresAuth\": true });\n            }\n\n            scheduleAutomaticRenew();\n        }, msBeforeExpiration - /* min validity in seconds */ 25 * 1000);\n    })();\n\n    return oidc;\n}\n\nfunction userToTokens(user: User): Oidc.Tokens {\n    const accessToken = user.access_token;\n\n    const accessTokenExpirationTime = (() => {\n        read_from_metadata: {\n            const { expires_at } = user;\n\n            if (expires_at === undefined) {\n                break read_from_metadata;\n            }\n\n            return expires_at * 1000;\n        }\n\n        read_from_jwt: {\n            const expirationTime = readExpirationTimeInJwt(accessToken);\n\n            if (expirationTime === undefined) {\n                break read_from_jwt;\n            }\n\n            return expirationTime;\n        }\n\n        assert(false, \"Failed to get access token expiration time\");\n    })();\n\n    const refreshToken = user.refresh_token;\n\n    assert(refreshToken !== undefined, \"No refresh token provided by the oidc server\");\n\n    const refreshTokenExpirationTime = (() => {\n        read_from_jwt: {\n            const expirationTime = readExpirationTimeInJwt(refreshToken);\n\n            if (expirationTime === undefined) {\n                break read_from_jwt;\n            }\n\n            return expirationTime;\n        }\n\n        assert(false, \"Failed to get refresh token expiration time\");\n    })();\n\n    const idToken = user.id_token;\n\n    assert(idToken !== undefined, \"No id token provided by the oidc server\");\n\n    return {\n        accessToken,\n        accessTokenExpirationTime,\n        refreshToken,\n        refreshTokenExpirationTime,\n        idToken\n    };\n}\n","import { useEffect, useState, createContext, useContext, type ReactNode } from \"react\";\nimport { createOidc, type Oidc } from \"./oidc\";\nimport { assert } from \"tsafe/assert\";\n\nconst oidcClientContext = createContext<Oidc | undefined>(undefined);\n\n/** @see: https://github.com/garronej/oidc-spa#option-2-usage-directly-within-react */\nexport function createOidcProvider(params: Parameters<typeof createOidc>[0]) {\n    const prOidc = createOidc(params);\n\n    function OidcProvider(props: { fallback?: ReactNode; children: ReactNode }) {\n        const { children, fallback } = props;\n\n        const [oidcClient, setOidcClient] = useState<Oidc | undefined>(undefined);\n\n        useEffect(() => {\n            prOidc.then(setOidcClient);\n        }, []);\n\n        if (oidcClient === undefined) {\n            return <>{fallback === undefined ? null : fallback}</>;\n        }\n\n        return <oidcClientContext.Provider value={oidcClient}>{children}</oidcClientContext.Provider>;\n    }\n\n    return { OidcProvider };\n}\n\n/** @see: https://github.com/garronej/oidc-spa#option-2-usage-directly-within-react */\nexport function useOidc() {\n    const oidc = useContext(oidcClientContext);\n    assert(oidc !== undefined, \"You must use useOidc inside a OidcClientProvider\");\n    return { oidc };\n}\n","import { overwriteReadonlyProp } from \"tsafe/lab/overwriteReadonlyProp\";\n\nexport class Deferred<T> {\n    public readonly pr: Promise<T>;\n\n    /** NOTE: Does not need to be called bound to instance*/\n    public readonly resolve: (value: T) => void;\n    public readonly reject: (error: any) => void;\n\n    constructor() {\n        let resolve!: (value: T) => void;\n        let reject!: (error: any) => void;\n\n        this.pr = new Promise<T>((resolve_, reject_) => {\n            resolve = value => {\n                overwriteReadonlyProp(this, \"isPending\", false);\n                resolve_(value);\n            };\n\n            reject = error => {\n                overwriteReadonlyProp(this, \"isPending\", false);\n                reject_(error);\n            };\n        });\n\n        this.resolve = resolve;\n        this.reject = reject;\n    }\n\n    public readonly isPending: boolean = true;\n}\n\nexport namespace Deferred {\n    export type Unpack<T extends Deferred<any>> = T extends Deferred<infer U> ? U : never;\n}\n\nexport class VoidDeferred extends Deferred<undefined> {\n    public declare readonly resolve: () => void;\n}\n","import decodeJwt from \"jwt-decode\";\nexport { decodeJwt };\n","export function fnv1aHashToHex(str: string) {\n    let hash = 2166136261;\n    for (let i = 0; i < str.length; i++) {\n        hash ^= str.charCodeAt(i);\n        hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n    }\n    return (hash >>> 0).toString(16); // Convert to unsigned 32-bit integer and then to hexadecimal\n}\n","import decodeJwt from \"jwt-decode\";\nimport { assert } from \"tsafe/assert\";\n\n// Return undefined if token provided wasn't a JWT or if it hasn't an exp claim number\nexport function readExpirationTimeInJwt(token: string): number | undefined {\n    let expirationTime: number;\n\n    try {\n        expirationTime = decodeJwt<{ exp: number }>(token).exp * 1000;\n\n        assert(typeof expirationTime === \"number\" && !isNaN(expirationTime));\n    } catch {\n        return undefined;\n    }\n\n    return expirationTime;\n}\n","export function addQueryParamToUrl(params: { url: string; name: string; value: string }): {\n    newUrl: string;\n} {\n    const { url, name, value } = params;\n\n    let newUrl = url;\n\n    const result = retrieveQueryParamFromUrl({\n        url,\n        name\n    });\n\n    if (result.wasPresent) {\n        newUrl = result.newUrl;\n    }\n\n    newUrl += `${\n        newUrl.includes(\"?\") ? \"&\" : newUrl.endsWith(\"?\") ? \"\" : \"?\"\n    }${name}=${encodeURIComponent(value)}`;\n\n    return { newUrl };\n}\n\nexport function retrieveAllQueryParamStartingWithPrefixFromUrl<\n    Prefix extends string,\n    DoLeave extends boolean\n>(params: {\n    url: string;\n    prefix: Prefix;\n    doLeavePrefixInResults: DoLeave;\n}): { newUrl: string; values: Record<DoLeave extends true ? `${Prefix}${string}` : string, string> } {\n    const { url, prefix, doLeavePrefixInResults } = params;\n\n    const [baseUrl, locationSearch = \"\"] = url.split(\"?\");\n\n    const values: Record<string, string> = {};\n\n    const { newLocationSearch } = (() => {\n        let newLocationSearch = locationSearch\n            .replace(/^\\?/, \"\")\n            .split(\"&\")\n            .map(part => part.split(\"=\") as [string, string])\n            .filter(([key, value_i]) =>\n                !key.startsWith(prefix)\n                    ? true\n                    : ((values[doLeavePrefixInResults ? key : key.substring(prefix.length)] =\n                          decodeURIComponent(value_i)),\n                      false)\n            )\n            .map(entry => entry.join(\"=\"))\n            .join(\"&\");\n        newLocationSearch = newLocationSearch === \"\" ? \"\" : `?${newLocationSearch}`;\n\n        return { newLocationSearch };\n    })();\n\n    return {\n        \"newUrl\": `${baseUrl}${newLocationSearch}`,\n        values\n    };\n}\n\nexport function retrieveQueryParamFromUrl(params: {\n    url: string;\n    name: string;\n}): { wasPresent: false } | { wasPresent: true; newUrl: string; value: string } {\n    const { url, name } = params;\n\n    const { newUrl, values } = retrieveAllQueryParamStartingWithPrefixFromUrl({\n        url,\n        \"prefix\": name,\n        \"doLeavePrefixInResults\": true\n    });\n\n    return name in values\n        ? {\n              \"wasPresent\": true,\n              newUrl,\n              \"value\": values[name]\n          }\n        : {\n              \"wasPresent\": false\n          };\n}\n"],"names":["module","exports","CryptoJS","Math","undefined","crypto","window","self","globalThis","msCrypto","global","require","err","cryptoSecureRandomInt","getRandomValues","Uint32Array","randomBytes","readInt32LE","Error","create","Object","F","obj","subtype","prototype","C","C_lib","lib","Base","extend","overrides","this","mixIn","hasOwnProperty","init","$super","apply","arguments","instance","properties","propertyName","toString","clone","WordArray","words","sigBytes","length","encoder","Hex","stringify","concat","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","i","thatByte","j","ceil","call","slice","random","nBytes","push","C_enc","enc","hexChars","bite","join","parse","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","e","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","data","_process","doFlush","processedWords","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","max","_minBufferSize","nBytesReady","min","offset","_doProcessBlock","splice","C_algo","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","message","_createHmacHelper","key","HMAC","algo","factory","root","parseLoop","base64Str","base64StrLength","reverseMap","bitsCombined","Base64","map","_map","base64Chars","triplet","charAt","paddingChar","_reverseMap","paddingIndex","indexOf","H","K","isPrime","n","sqrtN","sqrt","factor","getFractionalBits","nPrime","pow","W","SHA256","_hash","M","a","b","c","d","f","g","h","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","t1","nBitsTotal","nBitsLeft","floor","HmacSHA256","name","r","atob","bind","t","replace","o","toUpperCase","header","JSON","split","src_exports","__export","AccessTokenEvents","CheckSessionIFrame","ErrorResponse","ErrorTimeout","InMemoryWebStorage","Log","Logger","MetadataService","OidcClient","OidcClientSettingsStore","SessionMonitor","SigninResponse","SigninState","SignoutResponse","State","User","UserManager","UserManagerSettingsStore","Version","WebStorageStateStore","level","logger","Log2","import_core","__toESM","import_sha256","import_enc_base64","import_enc_utf8","nopLogger","debug","info","warn","error","setLevel","value","setLogger","constructor","_name","_len","args","Array","_key","_format","_method","_len2","_key2","_len3","_key3","_len4","_key4","throw","method","methodLogger","staticMethod","staticLogger","prefix","_len5","_key5","_len6","_key6","_len7","_key7","_len8","_key8","CryptoUtils","default","_randomWord","generateUUIDv4","code_verifier","hashed","client_id","client_secret","basicAuth","Event","_logger","_callbacks","addHandler","cb","removeHandler","idx","lastIndexOf","raise","_len9","ev","_key9","import_jwt_decode","JwtUtils","token","PopupUtils","static","_ref","features","_a","width","find","outerWidth","left","round","screenX","height","top","screenY","outerHeight","entries","filter","_ref2","_ref3","Timer","_timerHandle","_expiration","_callback","diff","getEpochTime","cancel","super","Date","now","durationInSeconds","logger2","expiration","timerDurationInSeconds","setInterval","clearInterval","UrlUtils","url","responseMode","TypeError","params","URL","URLSearchParams","form","_b","_c","error_description","error_uri","state","userState","session_state","_expiringTimer","_expiredTimer","_expiringNotificationTimeInSeconds","expiringNotificationTimeInSeconds","load","container","access_token","expires_in","duration","expiring","expired","unload","addAccessTokenExpiring","removeAccessTokenExpiring","addAccessTokenExpired","removeAccessTokenExpired","_client_id","_intervalInSeconds","_stopOnError","_timer","_session_state","_message","origin","_frame_origin","source","_frame","contentWindow","stop","parsedUrl","document","createElement","style","visibility","position","src","href","Promise","resolve","onload","body","appendChild","addEventListener","start","send","postMessage","clear","getItem","setItem","removeItem","getOwnPropertyNames","index","JsonService","additionalContentTypes","_jwtHandler","_extraHeaders","_contentTypes","input","timeoutInSeconds","initFetch","fetch","controller","AbortController","timeoutId","setTimeout","abort","signal","DOMException","clearTimeout","credentials","headers","response","appendExtraHeaders","fetchWithTimeout","status","contentType","get","item","startsWith","ok","text","json","statusText","_ref4","initCredentials","responseText","customKeys","keys","protectedHeaders","forEach","headerName","includes","toLocaleLowerCase","content","_settings","_signingKeys","_metadata","_metadataUrl","metadataUrl","_jsonService","extraHeaders","signingKeys","metadata","fetchRequestCredentials","_fetchRequestCredentials","resetSigningKeys","getJson","assign","metadataSeed","getIssuer","_getMetadataProperty","getAuthorizationEndpoint","getUserInfoEndpoint","getTokenEndpoint","optional","getCheckSessionIframe","getEndSessionEndpoint","getRevocationEndpoint","getKeysEndpoint","getMetadata","jwks_uri","keySet","isArray","store","localStorage","_store","_prefix","len","DefaultResponseType","DefaultScope","DefaultClientAuthentication","DefaultResponseMode","DefaultStaleStateAgeInSeconds","DefaultClockSkewInSeconds","_ref5","authority","response_type","scope","redirect_uri","post_logout_redirect_uri","client_authentication","prompt","display","max_age","ui_locales","acr_values","resource","response_mode","filterProtocolClaims","loadUserInfo","staleStateAgeInSeconds","clockSkewInSeconds","userInfoJwtIssuer","mergeClaims","disablePKCE","stateStore","refreshTokenCredentials","revokeTokenAdditionalContentTypes","refreshTokenAllowedScope","extraQueryParams","extraTokenParams","endsWith","console","TokenClient","_metadataService","_ref6","grant_type","code","set","generateBasicAuth","append","postForm","_ref7","_ref8","refresh_token","param","token_type_hint","id","created","request_type","toStorageString","storageString","createStatic","storage","age","cutoff","getAllKeys","remove","fromStorageString","generateCodeVerifier","code_challenge","generateCodeChallenge","skipUserInfo","token_type","profile","expires_at","Number","isOpenId","id_token","DefaultProtocolClaims","InternalRequiredProtocolClaims","settings","metadataService","_claimsService","claims","result","protocolClaims","claim","claims1","claims2","values","previousValue","_validator","_userInfoService","_getClaimsFromJwt","async","payload","decode","_tokenClient","_processSigninState","_processCode","_validateIdTokenAttributes","_processClaims","hasIdToken","validateSignoutResponse","validateSub","getClaims","sub","tokenResponse","exchangeCode","existingToken","incoming","existing","auth_time","azp","_ref11","request","request_uri","id_token_hint","login_hint","nonce","signinRequest","_ref9","state_data","optionalParams","searchParams","clearStaleState","signinState","removeState","readParams","storedStateString","readSigninResponseState","validateSigninResponse","_ref12","username","password","exchangeCredentials","signinResponse","validateCredentialsResponse","_ref13","allowableScopes","s","exchangeRefreshToken","validateRefreshResponse","_ref10","signoutState","readSignoutResponseState","type","revoke","_userManager","_start","user","_sub","_sid","sid","_checkSessionIFrame","intervalInSeconds","checkSessionIntervalInSeconds","stopOnError","stopCheckSessionOnError","checkSessionIFrame","_stop","monitorAnonymousSession","timerHandle","session","querySessionStatus","tmpUser","raiseEvent","events","_raiseUserSessionChanged","_raiseUserSignedOut","_raiseUserSignedIn","addUserLoaded","addUserUnloaded","_init","catch","getUser","scopes","messageSource","AbstractChildWindow","_abort","_disposeHandlers","Set","_window","location","keepOpen","reject","listener","scriptOrigin","_dispose","add","removeEventListener","reason","close","dispose","parent","targetOrigin","DefaultPopupWindowFeatures","toolbar","closePopupWindowAfterInSeconds","DefaultPopupTarget","DefaultAccessTokenExpiringNotificationTimeInSeconds","DefaultCheckSessionIntervalInSeconds","DefaultSilentRequestTimeoutInSeconds","popup_redirect_uri","popup_post_logout_redirect_uri","popupWindowFeatures","popupWindowTarget","redirectMethod","redirectTarget","iframeNotifyParentOrigin","iframeScriptOrigin","silent_redirect_uri","silentRequestTimeoutInSeconds","automaticSilentRenew","validateSubOnSilentRenew","includeIdTokenInSilentRenew","monitorSession","query_status_response_type","revokeTokenTypes","revokeTokensOnSignout","includeIdTokenInSilentSignout","accessTokenExpiringNotificationTimeInSeconds","userStore","sessionStorage","IFrameWindow","_ref14","_timeoutInSeconds","createHiddenIframe","iframe","timer","navigate","parentNode","_a2","frame","target","removeChild","_notifyParent","PopupWindow","_ref16","centeredPopup","center","open","serialize","closed","focus","popupClosedInterval","opener","UserManagerEvents","_userLoaded","_userUnloaded","_silentRenewError","_userSignedIn","_userSignedOut","_userSessionChanged","removeUserLoaded","removeUserUnloaded","addSilentRenewError","removeSilentRenewError","_raiseSilentRenewError","addUserSignedIn","removeUserSignedIn","addUserSignedOut","removeUserSignedOut","addUserSessionChanged","removeUserSessionChanged","redirectNavigator","popupNavigator","iframeNavigator","_client","_redirectNavigator","_ref19","targetWindow","redirect","promise","_popupNavigator","_ref17","_ref18","notifyOpener","_iframeNavigator","_ref15","notifyParent","_events","_silentRenewService","_isStarted","_retryTimer","_tokenExpiring","signinSilent","startSilentRenew","_sessionMonitor","_loadUser","storeUser","requestArgs","handle","prepare","_signinStart","_signinEnd","_ref20","processResourceOwnerPasswordCredentials","_buildUser","_signin","callback","_useRefreshToken","verifySub","useRefreshToken","signinRedirectCallback","signinPopupCallback","signinSilentCallback","signoutRedirectCallback","signoutPopupCallback","signoutSilentCallback","navResponse","processSigninResponse","createSigninRequest","_signoutStart","_signoutEnd","_signout","_revokeInternal","removeUser","signoutRequest","createSignoutRequest","signoutResponse","processSignoutResponse","types","typesPresent","revokeToken","stopSilentRenew","_userStoreKey","oidc_1","decodeJwt_1","enumerable","decodeJwt","oidc_client_ts_1","id_1","readExpirationTimeInJwt_1","assert_1","urlQueryParams_1","fnv1aHashToHex_1","Deferred_1","paramsToRetrieveFromSuccessfulLogin","userToTokens","accessToken","accessTokenExpirationTime","expirationTime","readExpirationTimeInJwt","assert","refreshToken","refreshTokenExpirationTime","idToken","issuerUri","clientId","transformUrlBeforeRedirect","getExtraQueryParams","publicUrl_params","publicUrl","configHash","fnv1aHashToHex","configHashKey","userManager","login","doesCurrentHrefRequiresAuth","_i","urlInstance","URL_real","__spreadArray","__read","Proxy","prop","url_1","__assign","addQueryParamToUrl","newUrl","defineProperty","signinRedirect","sent","retrieveQueryParamFromUrl","wasPresent","loginSuccessUrl","paramsToRetrieveFromSuccessfulLogin_1","__values","paramsToRetrieveFromSuccessfulLogin_1_1","next","done","name_1","history","pushState","_d","dLoginSuccessUrl_1","Deferred","timeout_1","listener_1","event","paramsToRetrieveFromSuccessfulLogin_2","paramsToRetrieveFromSuccessfulLogin_2_1","name_2","pr","then","tokens","currentTokens","common","oidc","__awaiter","_this","signoutRedirect","redirectTo","scheduleAutomaticRenew","msBeforeExpiration","renewTokens","react_1","oidcClientContext","createContext","prOidc","createOidc","OidcProvider","props","children","fallback","useState","oidcClient","setOidcClient","useEffect","jsx_runtime_1","jsx","Fragment","Provider","useContext","overwriteReadonlyProp_1","isPending","resolve_","reject_","overwriteReadonlyProp","VoidDeferred","_super","__extends","jwt_decode_1","__importDefault","str","hash","exp","isNaN","retrieveAllQueryParamStartingWithPrefixFromUrl","doLeavePrefixInResults","baseUrl","locationSearch","newLocationSearch","part","value_i","substring","entry"],"sourceRoot":""}