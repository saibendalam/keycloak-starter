{"version":3,"file":"static/js/4378.c666ad6a.chunk.js","mappings":"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","sources":["keycloak-theme/account/Template.tsx","../node_modules/keycloakify/src/account/lib/useGetClassName.ts","../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/lib/usePrepareTemplate.ts","../node_modules/keycloakify/src/tools/HTMLElement.prototype.prepend.ts","../node_modules/keycloakify/src/tools/clsx.ts","../node_modules/keycloakify/src/tools/headInsert.ts"],"sourcesContent":["// Copy pasted from: https://github.com/InseeFrLab/keycloakify/blob/main/src/login/Template.tsx\r\n\r\nimport { clsx } from \"keycloakify/tools/clsx\";\r\nimport { usePrepareTemplate } from \"keycloakify/lib/usePrepareTemplate\";\r\nimport { type TemplateProps } from \"keycloakify/account/TemplateProps\";\r\nimport { useGetClassName } from \"keycloakify/account/lib/useGetClassName\";\r\nimport type { KcContext } from \"./kcContext\";\r\nimport type { I18n } from \"./i18n\";\r\nimport { assert } from \"keycloakify/tools/assert\";\r\n\r\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\r\n    const { kcContext, i18n, doUseDefaultCss, active, classes, children } = props;\r\n\r\n    const { getClassName } = useGetClassName({ doUseDefaultCss, classes });\r\n\r\n    const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } = i18n;\r\n\r\n    const { locale, url, features, realm, message, referrer } = kcContext;\r\n\r\n    const { isReady } = usePrepareTemplate({\r\n        \"doFetchDefaultThemeResources\": doUseDefaultCss,\r\n        \"styles\": [\r\n            `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly.min.css`,\r\n            `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly-additions.min.css`,\r\n            `${url.resourcesPath}/css/account.css`\r\n        ],\r\n        \"htmlClassName\": getClassName(\"kcHtmlClass\"),\r\n        \"bodyClassName\": clsx(\"admin-console\", \"user\", getClassName(\"kcBodyClass\"))\r\n    });\r\n\r\n    if (!isReady) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header className=\"navbar navbar-default navbar-pf navbar-main header\">\r\n                <nav className=\"navbar\" role=\"navigation\">\r\n                    <div className=\"navbar-header\">\r\n                        <div className=\"container\">\r\n                            <h1 className=\"navbar-title\">Keycloak</h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"navbar-collapse navbar-collapse-1\">\r\n                        <div className=\"container\">\r\n                            <ul className=\"nav navbar-nav navbar-utility\">\r\n                                {realm.internationalizationEnabled && (assert(locale !== undefined), true) && locale.supported.length > 1 && (\r\n                                    <li>\r\n                                        <div className=\"kc-dropdown\" id=\"kc-locale-dropdown\">\r\n                                            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                                            <a href=\"#\" id=\"kc-current-locale-link\">\r\n                                                {labelBySupportedLanguageTag[currentLanguageTag]}\r\n                                            </a>\r\n                                            <ul>\r\n                                                {locale.supported.map(({ languageTag }) => (\r\n                                                    <li key={languageTag} className=\"kc-dropdown-item\">\r\n                                                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                                                        <a href=\"#\" onClick={() => changeLocale(languageTag)}>\r\n                                                            {labelBySupportedLanguageTag[languageTag]}\r\n                                                        </a>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </li>\r\n                                )}\r\n                                {referrer?.url && (\r\n                                    <li>\r\n                                        <a href={referrer.url} id=\"referrer\">\r\n                                            {msg(\"backTo\", referrer.name)}\r\n                                        </a>\r\n                                    </li>\r\n                                )}\r\n                                <li>\r\n                                    <a href={url.getLogoutUrl()}>{msg(\"doSignOut\")}</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"bs-sidebar col-sm-3\">\r\n                    <ul>\r\n                        <li className={clsx(active === \"account\" && \"active\")}>\r\n                            <a href={url.accountUrl}>{msg(\"account\")}</a>\r\n                        </li>\r\n                        {features.passwordUpdateSupported && (\r\n                            <li className={clsx(active === \"password\" && \"active\")}>\r\n                                <a href={url.passwordUrl}>{msg(\"password\")}</a>\r\n                            </li>\r\n                        )}\r\n                        <li className={clsx(active === \"totp\" && \"active\")}>\r\n                            <a href={url.totpUrl}>{msg(\"authenticator\")}</a>\r\n                        </li>\r\n                        {features.identityFederation && (\r\n                            <li className={clsx(active === \"social\" && \"active\")}>\r\n                                <a href={url.socialUrl}>{msg(\"federatedIdentity\")}</a>\r\n                            </li>\r\n                        )}\r\n                        <li className={clsx(active === \"sessions\" && \"active\")}>\r\n                            <a href={url.sessionsUrl}>{msg(\"sessions\")}</a>\r\n                        </li>\r\n                        <li className={clsx(active === \"applications\" && \"active\")}>\r\n                            <a href={url.applicationsUrl}>{msg(\"applications\")}</a>\r\n                        </li>\r\n                        {features.log && (\r\n                            <li className={clsx(active === \"log\" && \"active\")}>\r\n                                <a href={url.logUrl}>{msg(\"log\")}</a>\r\n                            </li>\r\n                        )}\r\n                        {realm.userManagedAccessAllowed && features.authorization && (\r\n                            <li className={clsx(active === \"authorization\" && \"active\")}>\r\n                                <a href={url.resourceUrl}>{msg(\"myResources\")}</a>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"col-sm-9 content-area\">\r\n                    {message !== undefined && (\r\n                        <div className={clsx(\"alert\", `alert-${message.type}`)}>\r\n                            {message.type === \"success\" && <span className=\"pficon pficon-ok\"></span>}\r\n                            {message.type === \"error\" && <span className=\"pficon pficon-error-circle-o\"></span>}\r\n                            <span className=\"kc-feedback-text\">{message.summary}</span>\r\n                        </div>\r\n                    )}\r\n\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/account/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcHtmlClass\": undefined,\n        \"kcBodyClass\": undefined,\n        \"kcButtonClass\": \"btn\",\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonDefaultClass\": \"btn-default\"\n    }\n});\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { useReducer, useEffect } from \"react\";\nimport { headInsert } from \"keycloakify/tools/headInsert\";\nimport { clsx } from \"keycloakify/tools/clsx\";\n\nexport function usePrepareTemplate(params: {\n    doFetchDefaultThemeResources: boolean;\n    styles?: string[];\n    scripts?: string[];\n    htmlClassName: string | undefined;\n    bodyClassName: string | undefined;\n}) {\n    const { doFetchDefaultThemeResources, styles = [], scripts = [], htmlClassName, bodyClassName } = params;\n\n    const [isReady, setReady] = useReducer(() => true, !doFetchDefaultThemeResources);\n\n    useEffect(() => {\n        if (!doFetchDefaultThemeResources) {\n            return;\n        }\n\n        let isUnmounted = false;\n\n        const removeArray: (() => void)[] = [];\n\n        (async () => {\n            for (const style of [...styles].reverse()) {\n                const { prLoaded, remove } = headInsert({\n                    \"type\": \"css\",\n                    \"position\": \"prepend\",\n                    \"href\": style\n                });\n\n                removeArray.push(remove);\n\n                // TODO: Find a way to do that in parallel (without breaking the order)\n                await prLoaded;\n\n                if (isUnmounted) {\n                    return;\n                }\n            }\n\n            setReady();\n        })();\n\n        scripts.forEach(src => {\n            const { remove } = headInsert({\n                \"type\": \"javascript\",\n                src\n            });\n\n            removeArray.push(remove);\n        });\n\n        return () => {\n            isUnmounted = true;\n            removeArray.forEach(remove => remove());\n        };\n    }, []);\n\n    useSetClassName({\n        \"target\": \"html\",\n        \"className\": htmlClassName\n    });\n\n    useSetClassName({\n        \"target\": \"body\",\n        \"className\": bodyClassName\n    });\n\n    return { isReady };\n}\n\nfunction useSetClassName(params: { target: \"html\" | \"body\"; className: string | undefined }) {\n    const { target, className } = params;\n\n    useEffect(() => {\n        if (className === undefined) {\n            return;\n        }\n\n        const htmlClassList = document.getElementsByTagName(target)[0].classList;\n\n        const tokens = clsx(className).split(\" \");\n\n        htmlClassList.add(...tokens);\n\n        return () => {\n            htmlClassList.remove(...tokens);\n        };\n    }, [className]);\n}\n","if (!HTMLElement.prototype.prepend) {\n    HTMLElement.prototype.prepend = function (childNode) {\n        if (typeof childNode === \"string\") {\n            throw new Error(\"Error with HTMLElement.prototype.appendFirst polyfill\");\n        }\n\n        this.insertBefore(childNode, this.firstChild);\n    };\n}\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","import \"./HTMLElement.prototype.prepend\";\nimport { Deferred } from \"evt/tools/Deferred\";\n\nexport function headInsert(\n    params:\n        | {\n              type: \"css\";\n              href: string;\n              position: \"append\" | \"prepend\";\n          }\n        | {\n              type: \"javascript\";\n              src: string;\n          }\n): { remove: () => void; prLoaded: Promise<void> } {\n    const htmlElement = document.createElement(\n        (() => {\n            switch (params.type) {\n                case \"css\":\n                    return \"link\";\n                case \"javascript\":\n                    return \"script\";\n            }\n        })()\n    );\n\n    const dLoaded = new Deferred<void>();\n\n    htmlElement.addEventListener(\"load\", () => dLoaded.resolve());\n\n    Object.assign(\n        htmlElement,\n        (() => {\n            switch (params.type) {\n                case \"css\":\n                    return {\n                        \"href\": params.href,\n                        \"type\": \"text/css\",\n                        \"rel\": \"stylesheet\",\n                        \"media\": \"screen,print\"\n                    };\n                case \"javascript\":\n                    return {\n                        \"src\": params.src,\n                        \"type\": \"text/javascript\"\n                    };\n            }\n        })()\n    );\n\n    document.getElementsByTagName(\"head\")[0][\n        (() => {\n            switch (params.type) {\n                case \"javascript\":\n                    return \"appendChild\";\n                case \"css\":\n                    return (() => {\n                        switch (params.position) {\n                            case \"append\":\n                                return \"appendChild\";\n                            case \"prepend\":\n                                return \"prepend\";\n                        }\n                    })();\n            }\n        })()\n    ](htmlElement);\n\n    return {\n        \"prLoaded\": dLoaded.pr,\n        \"remove\": () => htmlElement.remove()\n    };\n}\n"],"names":["Template","props","kcContext","i18n","doUseDefaultCss","active","classes","children","getClassName","useGetClassName","msg","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","locale","url","features","realm","message","referrer","isReady","usePrepareTemplate","concat","resourcesCommonPath","resourcesPath","clsx","_jsxs","_Fragment","_jsx","className","role","internationalizationEnabled","assert","undefined","supported","length","id","href","map","_ref","languageTag","onClick","name","getLogoutUrl","accountUrl","passwordUpdateSupported","passwordUrl","totpUrl","identityFederation","socialUrl","sessionsUrl","applicationsUrl","log","logUrl","userManagedAccessAllowed","authorization","resourceUrl","type","summary","createUseClassName","params","defaultClasses","useConstCallback","classKey","doFetchDefaultThemeResources","styles","scripts","htmlClassName","bodyClassName","setReady","useReducer","useEffect","isUnmounted","removeArray","style","reverse","prLoaded","remove","headInsert","push","forEach","src","useSetClassName","target","htmlClassList","document","getElementsByTagName","classList","tokens","split","add","HTMLElement","prototype","prepend","childNode","Error","this","insertBefore","firstChild","len","arguments","i","cls","arg","toAdd","Array","isArray","typeGuard","k","htmlElement","createElement","dLoaded","Deferred","addEventListener","resolve","Object","assign","position","pr"],"sourceRoot":""}